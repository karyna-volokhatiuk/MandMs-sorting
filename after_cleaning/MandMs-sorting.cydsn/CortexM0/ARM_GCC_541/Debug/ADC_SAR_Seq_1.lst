ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_Seq_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_SAR_Seq_1_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_SAR_Seq_1_Init, %function
  25              	ADC_SAR_Seq_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 2


  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000400u };
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 3


  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 4


 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 0E20     		movs	r0, #14
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  41              		.loc 1 173 0
  42 000a 2549     		ldr	r1, .L6
  43 000c 0E20     		movs	r0, #14
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 234B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 5


 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 234B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 2249     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 2249     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 234A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 224A     		ldr	r2, .L6+24
  68 0030 224B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 224A     		ldr	r2, .L6+32
  72 0036 234B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a C022     		movs	r2, #192
  76 003c 1206     		lsls	r2, r2, #24
  77 003e 224B     		ldr	r3, .L6+40
  78 0040 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  79              		.loc 1 185 0 discriminator 4
  80 0042 224B     		ldr	r3, .L6+44
  81 0044 224A     		ldr	r2, .L6+48
  82 0046 1360     		str	r3, [r2]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  83              		.loc 1 186 0 discriminator 4
  84 0048 224A     		ldr	r2, .L6+52
  85 004a 1360     		str	r3, [r2]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  86              		.loc 1 190 0 discriminator 4
  87 004c 224A     		ldr	r2, .L6+56
  88 004e 1368     		ldr	r3, [r2]
  89 0050 8021     		movs	r1, #128
  90 0052 4902     		lsls	r1, r1, #9
  91 0054 0B43     		orrs	r3, r1
  92 0056 1360     		str	r3, [r2]
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 6


 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  93              		.loc 1 197 0 discriminator 4
  94 0058 0023     		movs	r3, #0
  95 005a 204A     		ldr	r2, .L6+60
  96 005c 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  97              		.loc 1 198 0 discriminator 4
  98 005e 204A     		ldr	r2, .L6+64
  99 0060 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 100              		.loc 1 199 0 discriminator 4
 101 0062 0133     		adds	r3, r3, #1
 102 0064 1F4A     		ldr	r2, .L6+68
 103 0066 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 104              		.loc 1 202 0 discriminator 4
 105 0068 0221     		movs	r1, #2
 106 006a 1F4A     		ldr	r2, .L6+72
 107 006c 1160     		str	r1, [r2]
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 108              		.loc 1 206 0 discriminator 4
 109 006e 1F49     		ldr	r1, .L6+76
 110 0070 0868     		ldr	r0, [r1]
 111              	.LVL2:
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 112              		.loc 1 207 0 discriminator 4
 113 0072 1F4A     		ldr	r2, .L6+80
 114 0074 0240     		ands	r2, r0
 115              	.LVL3:
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 116              		.loc 1 213 0 discriminator 4
 117 0076 1343     		orrs	r3, r2
 118              	.LVL4:
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 7


 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 119              		.loc 1 226 0 discriminator 4
 120 0078 0B60     		str	r3, [r1]
 121              	.LVL5:
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 122              		.loc 1 232 0 discriminator 4
 123 007a 0023     		movs	r3, #0
 124              	.LVL6:
 125 007c 0DE0     		b	.L3
 126              	.LVL7:
 127              	.L4:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 128              		.loc 1 253 0
 129 007e 9A00     		lsls	r2, r3, #2
 130 0080 1C49     		ldr	r1, .L6+84
 131 0082 5118     		adds	r1, r2, r1
 132 0084 8020     		movs	r0, #128
 133 0086 C000     		lsls	r0, r0, #3
 134 0088 0860     		str	r0, [r1]
 135              	.LVL8:
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 8


 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 136              		.loc 1 298 0
 137 008a 5800     		lsls	r0, r3, #1
 138 008c 0024     		movs	r4, #0
 139 008e 1A49     		ldr	r1, .L6+88
 140 0090 4452     		strh	r4, [r0, r1]
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 141              		.loc 1 311 0
 142 0092 1A48     		ldr	r0, .L6+92
 143 0094 1A49     		ldr	r1, .L6+96
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 9


 144 0096 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 145              		.loc 1 232 0
 146 0098 0133     		adds	r3, r3, #1
 147              	.LVL9:
 148              	.L3:
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 149              		.loc 1 232 0 is_stmt 0 discriminator 1
 150 009a 002B     		cmp	r3, #0
 151 009c EFD0     		beq	.L4
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 152              		.loc 1 314 0 is_stmt 1
 153              		@ sp needed
 154 009e 10BD     		pop	{r4, pc}
 155              	.L7:
 156              		.align	2
 157              	.L6:
 158 00a0 00000000 		.word	ADC_SAR_Seq_1_ISR
 159 00a4 20001A40 		.word	1075445792
 160 00a8 80031A40 		.word	1075446656
 161 00ac 70021053 		.word	1393558128
 162 00b0 70020053 		.word	1392509552
 163 00b4 00001A40 		.word	1075445760
 164 00b8 F4000080 		.word	-2147483404
 165 00bc 04001A40 		.word	1075445764
 166 00c0 0000FF07 		.word	134152192
 167 00c4 18001A40 		.word	1075445784
 168 00c8 1C001A40 		.word	1075445788
 169 00cc 04000400 		.word	262148
 170 00d0 10001A40 		.word	1075445776
 171 00d4 14001A40 		.word	1075445780
 172 00d8 00031A40 		.word	1075446528
 173 00dc 28021A40 		.word	1075446312
 174 00e0 38021A40 		.word	1075446328
 175 00e4 18021A40 		.word	1075446296
 176 00e8 000F1A40 		.word	1075449600
 177 00ec 30001A40 		.word	1075445808
 178 00f0 FFFFFFDF 		.word	-536870913
 179 00f4 80001A40 		.word	1075445888
 180 00f8 00000000 		.word	ADC_SAR_Seq_1_offset
 181 00fc 3E180000 		.word	6206
 182 0100 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 183              		.cfi_endproc
 184              	.LFE1:
 185              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 186              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 187              		.align	2
 188              		.global	ADC_SAR_Seq_1_Enable
 189              		.code	16
 190              		.thumb_func
 191              		.type	ADC_SAR_Seq_1_Enable, %function
 192              	ADC_SAR_Seq_1_Enable:
 193              	.LFB2:
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 10


 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 194              		.loc 1 331 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 10B5     		push	{r4, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 202              		.loc 1 332 0
 203 0002 074B     		ldr	r3, .L10
 204 0004 1B68     		ldr	r3, [r3]
 205 0006 002B     		cmp	r3, #0
 206 0008 08DB     		blt	.L8
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 207              		.loc 1 342 0
 208 000a 054A     		ldr	r2, .L10
 209 000c 1368     		ldr	r3, [r2]
 210 000e 8021     		movs	r1, #128
 211 0010 0906     		lsls	r1, r1, #24
 212 0012 0B43     		orrs	r3, r1
 213 0014 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 214              		.loc 1 345 0
 215 0016 0A20     		movs	r0, #10
 216 0018 FFF7FEFF 		bl	CyDelayUs
 217              	.LVL10:
 218              	.L8:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 219              		.loc 1 347 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 11


 220              		@ sp needed
 221 001c 10BD     		pop	{r4, pc}
 222              	.L11:
 223 001e C046     		.align	2
 224              	.L10:
 225 0020 00001A40 		.word	1075445760
 226              		.cfi_endproc
 227              	.LFE2:
 228              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 229              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 230              		.align	2
 231              		.global	ADC_SAR_Seq_1_Start
 232              		.code	16
 233              		.thumb_func
 234              		.type	ADC_SAR_Seq_1_Start, %function
 235              	ADC_SAR_Seq_1_Start:
 236              	.LFB0:
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 237              		.loc 1 64 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 10B5     		push	{r4, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 245              		.loc 1 66 0
 246 0002 064B     		ldr	r3, .L14
 247 0004 1B78     		ldrb	r3, [r3]
 248 0006 002B     		cmp	r3, #0
 249 0008 04D1     		bne	.L13
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 250              		.loc 1 68 0
 251 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 252              	.LVL11:
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 253              		.loc 1 69 0
 254 000e 0122     		movs	r2, #1
 255 0010 024B     		ldr	r3, .L14
 256 0012 1A70     		strb	r2, [r3]
 257              	.L13:
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 258              		.loc 1 71 0
 259 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 260              	.LVL12:
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 261              		.loc 1 72 0
 262              		@ sp needed
 263 0018 10BD     		pop	{r4, pc}
 264              	.L15:
 265 001a C046     		.align	2
 266              	.L14:
 267 001c 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE0:
 270              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 12


 271              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 272              		.align	2
 273              		.global	ADC_SAR_Seq_1_Stop
 274              		.code	16
 275              		.thumb_func
 276              		.type	ADC_SAR_Seq_1_Stop, %function
 277              	ADC_SAR_Seq_1_Stop:
 278              	.LFB3:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 279              		.loc 1 366 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 284              		.loc 1 367 0
 285 0000 024A     		ldr	r2, .L17
 286 0002 1368     		ldr	r3, [r2]
 287 0004 5B00     		lsls	r3, r3, #1
 288 0006 5B08     		lsrs	r3, r3, #1
 289 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 290              		.loc 1 368 0
 291              		@ sp needed
 292 000a 7047     		bx	lr
 293              	.L18:
 294              		.align	2
 295              	.L17:
 296 000c 00001A40 		.word	1075445760
 297              		.cfi_endproc
 298              	.LFE3:
 299              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 300              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 301              		.align	2
 302              		.global	ADC_SAR_Seq_1_StartConvert
 303              		.code	16
 304              		.thumb_func
 305              		.type	ADC_SAR_Seq_1_StartConvert, %function
 306              	ADC_SAR_Seq_1_StartConvert:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 13


 307              	.LFB4:
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 308              		.loc 1 392 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 313              		.loc 1 394 0
 314 0000 034A     		ldr	r2, .L20
 315 0002 1368     		ldr	r3, [r2]
 316 0004 8021     		movs	r1, #128
 317 0006 4902     		lsls	r1, r1, #9
 318 0008 0B43     		orrs	r3, r1
 319 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 320              		.loc 1 399 0
 321              		@ sp needed
 322 000c 7047     		bx	lr
 323              	.L21:
 324 000e C046     		.align	2
 325              	.L20:
 326 0010 04001A40 		.word	1075445764
 327              		.cfi_endproc
 328              	.LFE4:
 329              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 330              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 331              		.align	2
 332              		.global	ADC_SAR_Seq_1_StopConvert
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 14


 333              		.code	16
 334              		.thumb_func
 335              		.type	ADC_SAR_Seq_1_StopConvert, %function
 336              	ADC_SAR_Seq_1_StopConvert:
 337              	.LFB5:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 338              		.loc 1 417 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 343              		.loc 1 419 0
 344 0000 024A     		ldr	r2, .L23
 345 0002 1168     		ldr	r1, [r2]
 346 0004 024B     		ldr	r3, .L23+4
 347 0006 0B40     		ands	r3, r1
 348 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 349              		.loc 1 421 0
 350              		@ sp needed
 351 000a 7047     		bx	lr
 352              	.L24:
 353              		.align	2
 354              	.L23:
 355 000c 04001A40 		.word	1075445764
 356 0010 FFFFFEFF 		.word	-65537
 357              		.cfi_endproc
 358              	.LFE5:
 359              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 360              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 361              		.align	2
 362              		.global	ADC_SAR_Seq_1_IsEndConversion
 363              		.code	16
 364              		.thumb_func
 365              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 366              	ADC_SAR_Seq_1_IsEndConversion:
 367              	.LFB6:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 15


 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 368              		.loc 1 451 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373              	.LVL13:
 374 0000 0200     		movs	r2, r0
 375              	.LVL14:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 376              		.loc 1 454 0
 377 0002 8307     		lsls	r3, r0, #30
 378 0004 0CD0     		beq	.L29
 379              	.LVL15:
 380              	.L28:
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 381              		.loc 1 458 0 discriminator 2
 382 0006 074B     		ldr	r3, .L30
 383 0008 1B68     		ldr	r3, [r3]
 384 000a 0120     		movs	r0, #1
 385 000c 1840     		ands	r0, r3
 386              	.LVL16:
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 16


 387              		.loc 1 459 0 discriminator 2
 388 000e 01D1     		bne	.L27
 389              		.loc 1 459 0 is_stmt 0 discriminator 1
 390 0010 9307     		lsls	r3, r2, #30
 391 0012 F8D4     		bmi	.L28
 392              	.L27:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 393              		.loc 1 461 0 is_stmt 1
 394 0014 0028     		cmp	r0, #0
 395 0016 04D0     		beq	.L26
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 396              		.loc 1 464 0
 397 0018 0122     		movs	r2, #1
 398              	.LVL17:
 399 001a 024B     		ldr	r3, .L30
 400 001c 1A60     		str	r2, [r3]
 401 001e 00E0     		b	.L26
 402              	.LVL18:
 403              	.L29:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 404              		.loc 1 452 0
 405 0020 0020     		movs	r0, #0
 406              	.LVL19:
 407              	.L26:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 408              		.loc 1 486 0
 409              		@ sp needed
 410 0022 7047     		bx	lr
 411              	.L31:
 412              		.align	2
 413              	.L30:
 414 0024 10021A40 		.word	1075446288
 415              		.cfi_endproc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 17


 416              	.LFE6:
 417              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 418              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 419              		.align	2
 420              		.global	ADC_SAR_Seq_1_GetResult16
 421              		.code	16
 422              		.thumb_func
 423              		.type	ADC_SAR_Seq_1_GetResult16, %function
 424              	ADC_SAR_Seq_1_GetResult16:
 425              	.LFB7:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 426              		.loc 1 505 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              	.LVL20:
 431 0000 10B5     		push	{r4, lr}
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 4, -8
 434              		.cfi_offset 14, -4
 435 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 436              		.loc 1 509 0
 437 0004 02D0     		beq	.L33
 438              		.loc 1 509 0 is_stmt 0 discriminator 1
 439 0006 0020     		movs	r0, #0
 440              	.LVL21:
 441 0008 FFF7FEFF 		bl	CyHalt
 442              	.LVL22:
 443              	.L33:
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 444              		.loc 1 511 0 is_stmt 1
 445 000c 002C     		cmp	r4, #0
 446 000e 07D1     		bne	.L35
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 18


 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 447              		.loc 1 513 0
 448 0010 A400     		lsls	r4, r4, #2
 449              	.LVL23:
 450 0012 054B     		ldr	r3, .L36
 451 0014 9C46     		mov	ip, r3
 452 0016 6444     		add	r4, r4, ip
 453 0018 2068     		ldr	r0, [r4]
 454 001a 0004     		lsls	r0, r0, #16
 455 001c 000C     		lsrs	r0, r0, #16
 456              	.LVL24:
 457 001e 00E0     		b	.L34
 458              	.LVL25:
 459              	.L35:
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 460              		.loc 1 521 0
 461 0020 0020     		movs	r0, #0
 462              	.LVL26:
 463              	.L34:
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 464              		.loc 1 525 0
 465 0022 00B2     		sxth	r0, r0
 466              	.LVL27:
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 467              		.loc 1 526 0
 468              		@ sp needed
 469 0024 10BD     		pop	{r4, pc}
 470              	.L37:
 471 0026 C046     		.align	2
 472              	.L36:
 473 0028 80011A40 		.word	1075446144
 474              		.cfi_endproc
 475              	.LFE7:
 476              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 477              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 478              		.align	2
 479              		.global	ADC_SAR_Seq_1_SetChanMask
 480              		.code	16
 481              		.thumb_func
 482              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 483              	ADC_SAR_Seq_1_SetChanMask:
 484              	.LFB8:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 19


 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 485              		.loc 1 550 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490              	.LVL28:
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 491              		.loc 1 551 0
 492 0000 0123     		movs	r3, #1
 493 0002 1840     		ands	r0, r3
 494              	.LVL29:
 495 0004 014B     		ldr	r3, .L39
 496 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 497              		.loc 1 552 0
 498              		@ sp needed
 499 0008 7047     		bx	lr
 500              	.L40:
 501 000a C046     		.align	2
 502              	.L39:
 503 000c 20001A40 		.word	1075445792
 504              		.cfi_endproc
 505              	.LFE8:
 506              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 507              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 508              		.align	2
 509              		.global	ADC_SAR_Seq_1_SetLowLimit
 510              		.code	16
 511              		.thumb_func
 512              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 513              	ADC_SAR_Seq_1_SetLowLimit:
 514              	.LFB9:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 20


 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 515              		.loc 1 594 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520              	.LVL30:
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 521              		.loc 1 595 0
 522 0000 054A     		ldr	r2, .L42
 523 0002 1368     		ldr	r3, [r2]
 524 0004 1B0C     		lsrs	r3, r3, #16
 525 0006 1B04     		lsls	r3, r3, #16
 526 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 527              		.loc 1 596 0
 528 000a 1368     		ldr	r3, [r2]
 529 000c 0004     		lsls	r0, r0, #16
 530              	.LVL31:
 531 000e 000C     		lsrs	r0, r0, #16
 532 0010 1843     		orrs	r0, r3
 533 0012 1060     		str	r0, [r2]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 21


 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 534              		.loc 1 597 0
 535              		@ sp needed
 536 0014 7047     		bx	lr
 537              	.L43:
 538 0016 C046     		.align	2
 539              	.L42:
 540 0018 18001A40 		.word	1075445784
 541              		.cfi_endproc
 542              	.LFE9:
 543              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 544              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 545              		.align	2
 546              		.global	ADC_SAR_Seq_1_SetHighLimit
 547              		.code	16
 548              		.thumb_func
 549              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 550              	ADC_SAR_Seq_1_SetHighLimit:
 551              	.LFB10:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 552              		.loc 1 615 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL32:
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 558              		.loc 1 616 0
 559 0000 044A     		ldr	r2, .L45
 560 0002 1368     		ldr	r3, [r2]
 561 0004 1B04     		lsls	r3, r3, #16
 562 0006 1B0C     		lsrs	r3, r3, #16
 563 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 564              		.loc 1 617 0
 565 000a 1368     		ldr	r3, [r2]
 566 000c 0004     		lsls	r0, r0, #16
 567              	.LVL33:
 568 000e 1843     		orrs	r0, r3
 569 0010 1060     		str	r0, [r2]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 22


 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 570              		.loc 1 618 0
 571              		@ sp needed
 572 0012 7047     		bx	lr
 573              	.L46:
 574              		.align	2
 575              	.L45:
 576 0014 18001A40 		.word	1075445784
 577              		.cfi_endproc
 578              	.LFE10:
 579              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 580              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 581              		.align	2
 582              		.global	ADC_SAR_Seq_1_SetLimitMask
 583              		.code	16
 584              		.thumb_func
 585              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 586              	ADC_SAR_Seq_1_SetLimitMask:
 587              	.LFB11:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 588              		.loc 1 639 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593              	.LVL34:
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 594              		.loc 1 640 0
 595 0000 0123     		movs	r3, #1
 596 0002 1840     		ands	r0, r3
 597              	.LVL35:
 598 0004 014B     		ldr	r3, .L48
 599 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 600              		.loc 1 641 0
 601              		@ sp needed
 602 0008 7047     		bx	lr
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 23


 603              	.L49:
 604 000a C046     		.align	2
 605              	.L48:
 606 000c 38021A40 		.word	1075446328
 607              		.cfi_endproc
 608              	.LFE11:
 609              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 610              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 611              		.align	2
 612              		.global	ADC_SAR_Seq_1_SetSatMask
 613              		.code	16
 614              		.thumb_func
 615              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 616              	ADC_SAR_Seq_1_SetSatMask:
 617              	.LFB12:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 618              		.loc 1 662 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623              	.LVL36:
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 624              		.loc 1 663 0
 625 0000 0123     		movs	r3, #1
 626 0002 1840     		ands	r0, r3
 627              	.LVL37:
 628 0004 014B     		ldr	r3, .L51
 629 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 630              		.loc 1 664 0
 631              		@ sp needed
 632 0008 7047     		bx	lr
 633              	.L52:
 634 000a C046     		.align	2
 635              	.L51:
 636 000c 28021A40 		.word	1075446312
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 24


 637              		.cfi_endproc
 638              	.LFE12:
 639              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 640              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 641              		.align	2
 642              		.global	ADC_SAR_Seq_1_SetOffset
 643              		.code	16
 644              		.thumb_func
 645              		.type	ADC_SAR_Seq_1_SetOffset, %function
 646              	ADC_SAR_Seq_1_SetOffset:
 647              	.LFB13:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 648              		.loc 1 690 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              	.LVL38:
 653 0000 70B5     		push	{r4, r5, r6, lr}
 654              		.cfi_def_cfa_offset 16
 655              		.cfi_offset 4, -16
 656              		.cfi_offset 5, -12
 657              		.cfi_offset 6, -8
 658              		.cfi_offset 14, -4
 659 0002 0400     		movs	r4, r0
 660 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 661              		.loc 1 692 0
 662 0006 0028     		cmp	r0, #0
 663 0008 02D0     		beq	.L54
 664              		.loc 1 692 0 is_stmt 0 discriminator 1
 665 000a 0020     		movs	r0, #0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 25


 666              	.LVL39:
 667 000c FFF7FEFF 		bl	CyHalt
 668              	.LVL40:
 669              	.L54:
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 670              		.loc 1 694 0 is_stmt 1
 671 0010 6400     		lsls	r4, r4, #1
 672              	.LVL41:
 673 0012 014B     		ldr	r3, .L55
 674 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 675              		.loc 1 695 0
 676              		@ sp needed
 677 0016 70BD     		pop	{r4, r5, r6, pc}
 678              	.L56:
 679              		.align	2
 680              	.L55:
 681 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 682              		.cfi_endproc
 683              	.LFE13:
 684              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 685              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 686              		.align	2
 687              		.global	ADC_SAR_Seq_1_SetGain
 688              		.code	16
 689              		.thumb_func
 690              		.type	ADC_SAR_Seq_1_SetGain, %function
 691              	ADC_SAR_Seq_1_SetGain:
 692              	.LFB14:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 26


 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 693              		.loc 1 724 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              	.LVL42:
 698 0000 70B5     		push	{r4, r5, r6, lr}
 699              		.cfi_def_cfa_offset 16
 700              		.cfi_offset 4, -16
 701              		.cfi_offset 5, -12
 702              		.cfi_offset 6, -8
 703              		.cfi_offset 14, -4
 704 0002 0400     		movs	r4, r0
 705 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 706              		.loc 1 726 0
 707 0006 0028     		cmp	r0, #0
 708 0008 02D0     		beq	.L58
 709              		.loc 1 726 0 is_stmt 0 discriminator 1
 710 000a 0020     		movs	r0, #0
 711              	.LVL43:
 712 000c FFF7FEFF 		bl	CyHalt
 713              	.LVL44:
 714              	.L58:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 715              		.loc 1 728 0 is_stmt 1
 716 0010 A400     		lsls	r4, r4, #2
 717              	.LVL45:
 718 0012 014B     		ldr	r3, .L59
 719 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 720              		.loc 1 729 0
 721              		@ sp needed
 722              	.LVL46:
 723 0016 70BD     		pop	{r4, r5, r6, pc}
 724              	.L60:
 725              		.align	2
 726              	.L59:
 727 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 728              		.cfi_endproc
 729              	.LFE14:
 730              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 731              		.global	__aeabi_idiv
 732              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 733              		.align	2
 734              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 735              		.code	16
 736              		.thumb_func
 737              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 738              	ADC_SAR_Seq_1_CountsTo_mVolts:
 739              	.LFB15:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 27


 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 740              		.loc 1 757 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              	.LVL47:
 745 0000 70B5     		push	{r4, r5, r6, lr}
 746              		.cfi_def_cfa_offset 16
 747              		.cfi_offset 4, -16
 748              		.cfi_offset 5, -12
 749              		.cfi_offset 6, -8
 750              		.cfi_offset 14, -4
 751 0002 0400     		movs	r4, r0
 752 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 753              		.loc 1 761 0
 754 0006 0028     		cmp	r0, #0
 755 0008 02D0     		beq	.L62
 756              		.loc 1 761 0 is_stmt 0 discriminator 1
 757 000a 0020     		movs	r0, #0
 758              	.LVL48:
 759 000c FFF7FEFF 		bl	CyHalt
 760              	.LVL49:
 761              	.L62:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 28


 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 762              		.loc 1 772 0 is_stmt 1
 763 0010 6300     		lsls	r3, r4, #1
 764 0012 0F4A     		ldr	r2, .L65
 765 0014 995A     		ldrh	r1, [r3, r2]
 766 0016 09B2     		sxth	r1, r1
 767 0018 691A     		subs	r1, r5, r1
 768 001a 09B2     		sxth	r1, r1
 769              	.LVL50:
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 770              		.loc 1 774 0
 771 001c 0D48     		ldr	r0, .L65+4
 772 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 773              		.loc 1 775 0
 774 0020 0029     		cmp	r1, #0
 775 0022 06DD     		ble	.L63
 776              		.loc 1 775 0 is_stmt 0 discriminator 1
 777 0024 A300     		lsls	r3, r4, #2
 778 0026 0C4A     		ldr	r2, .L65+8
 779 0028 9A58     		ldr	r2, [r3, r2]
 780 002a D30F     		lsrs	r3, r2, #31
 781 002c 9A18     		adds	r2, r3, r2
 782 002e 5310     		asrs	r3, r2, #1
 783 0030 06E0     		b	.L64
 784              	.L63:
 785              		.loc 1 775 0 discriminator 2
 786 0032 A300     		lsls	r3, r4, #2
 787 0034 084A     		ldr	r2, .L65+8
 788 0036 9A58     		ldr	r2, [r3, r2]
 789 0038 D30F     		lsrs	r3, r2, #31
 790 003a 9A18     		adds	r2, r3, r2
 791 003c 5210     		asrs	r2, r2, #1
 792 003e 5342     		rsbs	r3, r2, #0
 793              	.L64:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 794              		.loc 1 774 0 is_stmt 1
 795 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 796              		.loc 1 776 0
 797 0042 A400     		lsls	r4, r4, #2
 798              	.LVL51:
 799 0044 044B     		ldr	r3, .L65+8
 800 0046 E158     		ldr	r1, [r4, r3]
 801              	.LVL52:
 802 0048 FFF7FEFF 		bl	__aeabi_idiv
 803              	.LVL53:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 804              		.loc 1 774 0
 805 004c 00B2     		sxth	r0, r0
 806              	.LVL54:
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 29


 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 807              		.loc 1 779 0
 808              		@ sp needed
 809 004e 70BD     		pop	{r4, r5, r6, pc}
 810              	.L66:
 811              		.align	2
 812              	.L65:
 813 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 814 0054 10270000 		.word	10000
 815 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 816              		.cfi_endproc
 817              	.LFE15:
 818              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 819              		.global	__aeabi_lmul
 820              		.global	__aeabi_ldivmod
 821              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 822              		.align	2
 823              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 824              		.code	16
 825              		.thumb_func
 826              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 827              	ADC_SAR_Seq_1_CountsTo_uVolts:
 828              	.LFB16:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 829              		.loc 1 811 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 30


 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              	.LVL55:
 834 0000 70B5     		push	{r4, r5, r6, lr}
 835              		.cfi_def_cfa_offset 16
 836              		.cfi_offset 4, -16
 837              		.cfi_offset 5, -12
 838              		.cfi_offset 6, -8
 839              		.cfi_offset 14, -4
 840 0002 0500     		movs	r5, r0
 841 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 842              		.loc 1 815 0
 843 0006 0028     		cmp	r0, #0
 844 0008 02D0     		beq	.L68
 845              		.loc 1 815 0 is_stmt 0 discriminator 1
 846 000a 0020     		movs	r0, #0
 847              	.LVL56:
 848 000c FFF7FEFF 		bl	CyHalt
 849              	.LVL57:
 850              	.L68:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 851              		.loc 1 826 0 is_stmt 1
 852 0010 6A00     		lsls	r2, r5, #1
 853 0012 084B     		ldr	r3, .L69
 854 0014 D05A     		ldrh	r0, [r2, r3]
 855 0016 00B2     		sxth	r0, r0
 856 0018 201A     		subs	r0, r4, r0
 857 001a 00B2     		sxth	r0, r0
 858              	.LVL58:
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 859              		.loc 1 828 0
 860 001c C117     		asrs	r1, r0, #31
 861 001e 064A     		ldr	r2, .L69+4
 862 0020 0023     		movs	r3, #0
 863 0022 FFF7FEFF 		bl	__aeabi_lmul
 864              	.LVL59:
 865 0026 AD00     		lsls	r5, r5, #2
 866              	.LVL60:
 867 0028 044B     		ldr	r3, .L69+8
 868 002a EA58     		ldr	r2, [r5, r3]
 869 002c D317     		asrs	r3, r2, #31
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 31


 870 002e FFF7FEFF 		bl	__aeabi_ldivmod
 871              	.LVL61:
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 872              		.loc 1 831 0
 873              		@ sp needed
 874 0032 70BD     		pop	{r4, r5, r6, pc}
 875              	.L70:
 876              		.align	2
 877              	.L69:
 878 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 879 0038 80969800 		.word	10000000
 880 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 881              		.cfi_endproc
 882              	.LFE16:
 883              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 884              		.global	__aeabi_i2f
 885              		.global	__aeabi_fmul
 886              		.global	__aeabi_fdiv
 887              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 888              		.align	2
 889              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 890              		.code	16
 891              		.thumb_func
 892              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 893              	ADC_SAR_Seq_1_CountsTo_Volts:
 894              	.LFB17:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 895              		.loc 1 856 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 32


 899              	.LVL62:
 900 0000 70B5     		push	{r4, r5, r6, lr}
 901              		.cfi_def_cfa_offset 16
 902              		.cfi_offset 4, -16
 903              		.cfi_offset 5, -12
 904              		.cfi_offset 6, -8
 905              		.cfi_offset 14, -4
 906 0002 0400     		movs	r4, r0
 907 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 908              		.loc 1 860 0
 909 0006 0028     		cmp	r0, #0
 910 0008 02D0     		beq	.L72
 911              		.loc 1 860 0 is_stmt 0 discriminator 1
 912 000a 0020     		movs	r0, #0
 913              	.LVL63:
 914 000c FFF7FEFF 		bl	CyHalt
 915              	.LVL64:
 916              	.L72:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 917              		.loc 1 871 0 is_stmt 1
 918 0010 6200     		lsls	r2, r4, #1
 919 0012 0A4B     		ldr	r3, .L73
 920 0014 D05A     		ldrh	r0, [r2, r3]
 921 0016 00B2     		sxth	r0, r0
 922 0018 281A     		subs	r0, r5, r0
 923 001a 00B2     		sxth	r0, r0
 924              	.LVL65:
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 925              		.loc 1 873 0
 926 001c FFF7FEFF 		bl	__aeabi_i2f
 927              	.LVL66:
 928 0020 0749     		ldr	r1, .L73+4
 929 0022 FFF7FEFF 		bl	__aeabi_fmul
 930              	.LVL67:
 931 0026 051C     		adds	r5, r0, #0
 932 0028 A400     		lsls	r4, r4, #2
 933              	.LVL68:
 934 002a 064B     		ldr	r3, .L73+8
 935 002c E058     		ldr	r0, [r4, r3]
 936 002e FFF7FEFF 		bl	__aeabi_i2f
 937              	.LVL69:
 938 0032 011C     		adds	r1, r0, #0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 33


 939 0034 281C     		adds	r0, r5, #0
 940 0036 FFF7FEFF 		bl	__aeabi_fdiv
 941              	.LVL70:
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 942              		.loc 1 876 0
 943              		@ sp needed
 944 003a 70BD     		pop	{r4, r5, r6, pc}
 945              	.L74:
 946              		.align	2
 947              	.L73:
 948 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 949 0040 00002041 		.word	1092616192
 950 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 951              		.cfi_endproc
 952              	.LFE17:
 953              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 954              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 955              		.comm	ADC_SAR_Seq_1_offset,2,4
 956              		.global	ADC_SAR_Seq_1_initVar
 957              		.bss
 958              		.set	.LANCHOR0,. + 0
 959              		.type	ADC_SAR_Seq_1_initVar, %object
 960              		.size	ADC_SAR_Seq_1_initVar, 1
 961              	ADC_SAR_Seq_1_initVar:
 962 0000 00       		.space	1
 963              		.text
 964              	.Letext0:
 965              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 966              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 967              		.section	.debug_info,"",%progbits
 968              	.Ldebug_info0:
 969 0000 75050000 		.4byte	0x575
 970 0004 0400     		.2byte	0x4
 971 0006 00000000 		.4byte	.Ldebug_abbrev0
 972 000a 04       		.byte	0x4
 973 000b 01       		.uleb128 0x1
 974 000c 72000000 		.4byte	.LASF63
 975 0010 0C       		.byte	0xc
 976 0011 2D030000 		.4byte	.LASF64
 977 0015 61040000 		.4byte	.LASF65
 978 0019 00000000 		.4byte	.Ldebug_ranges0+0
 979 001d 00000000 		.4byte	0
 980 0021 00000000 		.4byte	.Ldebug_line0
 981 0025 02       		.uleb128 0x2
 982 0026 01       		.byte	0x1
 983 0027 06       		.byte	0x6
 984 0028 68010000 		.4byte	.LASF0
 985 002c 02       		.uleb128 0x2
 986 002d 01       		.byte	0x1
 987 002e 08       		.byte	0x8
 988 002f 94030000 		.4byte	.LASF1
 989 0033 02       		.uleb128 0x2
 990 0034 02       		.byte	0x2
 991 0035 05       		.byte	0x5
 992 0036 A2030000 		.4byte	.LASF2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 34


 993 003a 02       		.uleb128 0x2
 994 003b 02       		.byte	0x2
 995 003c 07       		.byte	0x7
 996 003d 51020000 		.4byte	.LASF3
 997 0041 02       		.uleb128 0x2
 998 0042 04       		.byte	0x4
 999 0043 05       		.byte	0x5
 1000 0044 B3010000 		.4byte	.LASF4
 1001 0048 02       		.uleb128 0x2
 1002 0049 04       		.byte	0x4
 1003 004a 07       		.byte	0x7
 1004 004b 2F020000 		.4byte	.LASF5
 1005 004f 02       		.uleb128 0x2
 1006 0050 08       		.byte	0x8
 1007 0051 05       		.byte	0x5
 1008 0052 5A010000 		.4byte	.LASF6
 1009 0056 02       		.uleb128 0x2
 1010 0057 08       		.byte	0x8
 1011 0058 07       		.byte	0x7
 1012 0059 14010000 		.4byte	.LASF7
 1013 005d 03       		.uleb128 0x3
 1014 005e 04       		.byte	0x4
 1015 005f 05       		.byte	0x5
 1016 0060 696E7400 		.ascii	"int\000"
 1017 0064 02       		.uleb128 0x2
 1018 0065 04       		.byte	0x4
 1019 0066 07       		.byte	0x7
 1020 0067 1B020000 		.4byte	.LASF8
 1021 006b 04       		.uleb128 0x4
 1022 006c BC010000 		.4byte	.LASF9
 1023 0070 02       		.byte	0x2
 1024 0071 FB01     		.2byte	0x1fb
 1025 0073 2C000000 		.4byte	0x2c
 1026 0077 04       		.uleb128 0x4
 1027 0078 15000000 		.4byte	.LASF10
 1028 007c 02       		.byte	0x2
 1029 007d FC01     		.2byte	0x1fc
 1030 007f 3A000000 		.4byte	0x3a
 1031 0083 04       		.uleb128 0x4
 1032 0084 D3010000 		.4byte	.LASF11
 1033 0088 02       		.byte	0x2
 1034 0089 FD01     		.2byte	0x1fd
 1035 008b 48000000 		.4byte	0x48
 1036 008f 04       		.uleb128 0x4
 1037 0090 5B040000 		.4byte	.LASF12
 1038 0094 02       		.byte	0x2
 1039 0095 FF01     		.2byte	0x1ff
 1040 0097 33000000 		.4byte	0x33
 1041 009b 04       		.uleb128 0x4
 1042 009c 8F010000 		.4byte	.LASF13
 1043 00a0 02       		.byte	0x2
 1044 00a1 0002     		.2byte	0x200
 1045 00a3 41000000 		.4byte	0x41
 1046 00a7 04       		.uleb128 0x4
 1047 00a8 B8020000 		.4byte	.LASF14
 1048 00ac 02       		.byte	0x2
 1049 00ad 0102     		.2byte	0x201
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 35


 1050 00af B3000000 		.4byte	0xb3
 1051 00b3 02       		.uleb128 0x2
 1052 00b4 04       		.byte	0x4
 1053 00b5 04       		.byte	0x4
 1054 00b6 54030000 		.4byte	.LASF15
 1055 00ba 02       		.uleb128 0x2
 1056 00bb 08       		.byte	0x8
 1057 00bc 04       		.byte	0x4
 1058 00bd CC010000 		.4byte	.LASF16
 1059 00c1 04       		.uleb128 0x4
 1060 00c2 16030000 		.4byte	.LASF17
 1061 00c6 02       		.byte	0x2
 1062 00c7 0602     		.2byte	0x206
 1063 00c9 4F000000 		.4byte	0x4f
 1064 00cd 02       		.uleb128 0x2
 1065 00ce 01       		.byte	0x1
 1066 00cf 08       		.byte	0x8
 1067 00d0 EE030000 		.4byte	.LASF18
 1068 00d4 04       		.uleb128 0x4
 1069 00d5 97020000 		.4byte	.LASF19
 1070 00d9 02       		.byte	0x2
 1071 00da A702     		.2byte	0x2a7
 1072 00dc E0000000 		.4byte	0xe0
 1073 00e0 05       		.uleb128 0x5
 1074 00e1 83000000 		.4byte	0x83
 1075 00e5 02       		.uleb128 0x2
 1076 00e6 08       		.byte	0x8
 1077 00e7 04       		.byte	0x4
 1078 00e8 D2020000 		.4byte	.LASF20
 1079 00ec 02       		.uleb128 0x2
 1080 00ed 04       		.byte	0x4
 1081 00ee 07       		.byte	0x7
 1082 00ef C0020000 		.4byte	.LASF21
 1083 00f3 06       		.uleb128 0x6
 1084 00f4 1C000000 		.4byte	.LASF25
 1085 00f8 01       		.byte	0x1
 1086 00f9 5E       		.byte	0x5e
 1087 00fa 00000000 		.4byte	.LFB1
 1088 00fe 04010000 		.4byte	.LFE1-.LFB1
 1089 0102 01       		.uleb128 0x1
 1090 0103 9C       		.byte	0x9c
 1091 0104 5D010000 		.4byte	0x15d
 1092 0108 07       		.uleb128 0x7
 1093 0109 E3030000 		.4byte	.LASF22
 1094 010d 01       		.byte	0x1
 1095 010e 60       		.byte	0x60
 1096 010f 83000000 		.4byte	0x83
 1097 0113 00000000 		.4byte	.LLST0
 1098 0117 07       		.uleb128 0x7
 1099 0118 47020000 		.4byte	.LASF23
 1100 011c 01       		.byte	0x1
 1101 011d 61       		.byte	0x61
 1102 011e 83000000 		.4byte	0x83
 1103 0122 1F000000 		.4byte	.LLST1
 1104 0126 07       		.uleb128 0x7
 1105 0127 37000000 		.4byte	.LASF24
 1106 012b 01       		.byte	0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 36


 1107 012c 62       		.byte	0x62
 1108 012d 9B000000 		.4byte	0x9b
 1109 0131 62000000 		.4byte	.LLST2
 1110 0135 08       		.uleb128 0x8
 1111 0136 0A000000 		.4byte	.LVL0
 1112 013a 4C050000 		.4byte	0x54c
 1113 013e 4D010000 		.4byte	0x14d
 1114 0142 09       		.uleb128 0x9
 1115 0143 01       		.uleb128 0x1
 1116 0144 50       		.byte	0x50
 1117 0145 01       		.uleb128 0x1
 1118 0146 3E       		.byte	0x3e
 1119 0147 09       		.uleb128 0x9
 1120 0148 01       		.uleb128 0x1
 1121 0149 51       		.byte	0x51
 1122 014a 01       		.uleb128 0x1
 1123 014b 33       		.byte	0x33
 1124 014c 00       		.byte	0
 1125 014d 0A       		.uleb128 0xa
 1126 014e 12000000 		.4byte	.LVL1
 1127 0152 57050000 		.4byte	0x557
 1128 0156 09       		.uleb128 0x9
 1129 0157 01       		.uleb128 0x1
 1130 0158 50       		.byte	0x50
 1131 0159 01       		.uleb128 0x1
 1132 015a 3E       		.byte	0x3e
 1133 015b 00       		.byte	0
 1134 015c 00       		.byte	0
 1135 015d 0B       		.uleb128 0xb
 1136 015e 2B010000 		.4byte	.LASF26
 1137 0162 01       		.byte	0x1
 1138 0163 4A01     		.2byte	0x14a
 1139 0165 00000000 		.4byte	.LFB2
 1140 0169 24000000 		.4byte	.LFE2-.LFB2
 1141 016d 01       		.uleb128 0x1
 1142 016e 9C       		.byte	0x9c
 1143 016f 83010000 		.4byte	0x183
 1144 0173 0A       		.uleb128 0xa
 1145 0174 1C000000 		.4byte	.LVL10
 1146 0178 62050000 		.4byte	0x562
 1147 017c 09       		.uleb128 0x9
 1148 017d 01       		.uleb128 0x1
 1149 017e 50       		.byte	0x50
 1150 017f 01       		.uleb128 0x1
 1151 0180 3A       		.byte	0x3a
 1152 0181 00       		.byte	0
 1153 0182 00       		.byte	0
 1154 0183 06       		.uleb128 0x6
 1155 0184 00010000 		.4byte	.LASF27
 1156 0188 01       		.byte	0x1
 1157 0189 3F       		.byte	0x3f
 1158 018a 00000000 		.4byte	.LFB0
 1159 018e 20000000 		.4byte	.LFE0-.LFB0
 1160 0192 01       		.uleb128 0x1
 1161 0193 9C       		.byte	0x9c
 1162 0194 AB010000 		.4byte	0x1ab
 1163 0198 0C       		.uleb128 0xc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 37


 1164 0199 0E000000 		.4byte	.LVL11
 1165 019d F3000000 		.4byte	0xf3
 1166 01a1 0C       		.uleb128 0xc
 1167 01a2 18000000 		.4byte	.LVL12
 1168 01a6 5D010000 		.4byte	0x15d
 1169 01aa 00       		.byte	0
 1170 01ab 0D       		.uleb128 0xd
 1171 01ac 70030000 		.4byte	.LASF28
 1172 01b0 01       		.byte	0x1
 1173 01b1 6D01     		.2byte	0x16d
 1174 01b3 00000000 		.4byte	.LFB3
 1175 01b7 10000000 		.4byte	.LFE3-.LFB3
 1176 01bb 01       		.uleb128 0x1
 1177 01bc 9C       		.byte	0x9c
 1178 01bd 0D       		.uleb128 0xd
 1179 01be 3E000000 		.4byte	.LASF29
 1180 01c2 01       		.byte	0x1
 1181 01c3 8701     		.2byte	0x187
 1182 01c5 00000000 		.4byte	.LFB4
 1183 01c9 14000000 		.4byte	.LFE4-.LFB4
 1184 01cd 01       		.uleb128 0x1
 1185 01ce 9C       		.byte	0x9c
 1186 01cf 0D       		.uleb128 0xd
 1187 01d0 FC020000 		.4byte	.LASF30
 1188 01d4 01       		.byte	0x1
 1189 01d5 A001     		.2byte	0x1a0
 1190 01d7 00000000 		.4byte	.LFB5
 1191 01db 14000000 		.4byte	.LFE5-.LFB5
 1192 01df 01       		.uleb128 0x1
 1193 01e0 9C       		.byte	0x9c
 1194 01e1 0E       		.uleb128 0xe
 1195 01e2 DE020000 		.4byte	.LASF32
 1196 01e6 01       		.byte	0x1
 1197 01e7 C201     		.2byte	0x1c2
 1198 01e9 83000000 		.4byte	0x83
 1199 01ed 00000000 		.4byte	.LFB6
 1200 01f1 28000000 		.4byte	.LFE6-.LFB6
 1201 01f5 01       		.uleb128 0x1
 1202 01f6 9C       		.byte	0x9c
 1203 01f7 1C020000 		.4byte	0x21c
 1204 01fb 0F       		.uleb128 0xf
 1205 01fc FD010000 		.4byte	.LASF34
 1206 0200 01       		.byte	0x1
 1207 0201 C201     		.2byte	0x1c2
 1208 0203 83000000 		.4byte	0x83
 1209 0207 78000000 		.4byte	.LLST3
 1210 020b 10       		.uleb128 0x10
 1211 020c 3C040000 		.4byte	.LASF31
 1212 0210 01       		.byte	0x1
 1213 0211 C401     		.2byte	0x1c4
 1214 0213 83000000 		.4byte	0x83
 1215 0217 BD000000 		.4byte	.LLST4
 1216 021b 00       		.byte	0
 1217 021c 0E       		.uleb128 0xe
 1218 021d 40010000 		.4byte	.LASF33
 1219 0221 01       		.byte	0x1
 1220 0222 F801     		.2byte	0x1f8
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 38


 1221 0224 8F000000 		.4byte	0x8f
 1222 0228 00000000 		.4byte	.LFB7
 1223 022c 2C000000 		.4byte	.LFE7-.LFB7
 1224 0230 01       		.uleb128 0x1
 1225 0231 9C       		.byte	0x9c
 1226 0232 66020000 		.4byte	0x266
 1227 0236 0F       		.uleb128 0xf
 1228 0237 E9030000 		.4byte	.LASF35
 1229 023b 01       		.byte	0x1
 1230 023c F801     		.2byte	0x1f8
 1231 023e 83000000 		.4byte	0x83
 1232 0242 F3000000 		.4byte	.LLST5
 1233 0246 10       		.uleb128 0x10
 1234 0247 9F040000 		.4byte	.LASF36
 1235 024b 01       		.byte	0x1
 1236 024c FA01     		.2byte	0x1fa
 1237 024e 83000000 		.4byte	0x83
 1238 0252 38010000 		.4byte	.LLST6
 1239 0256 0A       		.uleb128 0xa
 1240 0257 0C000000 		.4byte	.LVL22
 1241 025b 6D050000 		.4byte	0x56d
 1242 025f 09       		.uleb128 0x9
 1243 0260 01       		.uleb128 0x1
 1244 0261 50       		.byte	0x50
 1245 0262 01       		.uleb128 0x1
 1246 0263 30       		.byte	0x30
 1247 0264 00       		.byte	0
 1248 0265 00       		.byte	0
 1249 0266 0B       		.uleb128 0xb
 1250 0267 C9030000 		.4byte	.LASF37
 1251 026b 01       		.byte	0x1
 1252 026c 2502     		.2byte	0x225
 1253 026e 00000000 		.4byte	.LFB8
 1254 0272 10000000 		.4byte	.LFE8-.LFB8
 1255 0276 01       		.uleb128 0x1
 1256 0277 9C       		.byte	0x9c
 1257 0278 8D020000 		.4byte	0x28d
 1258 027c 0F       		.uleb128 0xf
 1259 027d DA010000 		.4byte	.LASF38
 1260 0281 01       		.byte	0x1
 1261 0282 2502     		.2byte	0x225
 1262 0284 83000000 		.4byte	0x83
 1263 0288 56010000 		.4byte	.LLST7
 1264 028c 00       		.byte	0
 1265 028d 0B       		.uleb128 0xb
 1266 028e F3030000 		.4byte	.LASF39
 1267 0292 01       		.byte	0x1
 1268 0293 5102     		.2byte	0x251
 1269 0295 00000000 		.4byte	.LFB9
 1270 0299 1C000000 		.4byte	.LFE9-.LFB9
 1271 029d 01       		.uleb128 0x1
 1272 029e 9C       		.byte	0x9c
 1273 029f B4020000 		.4byte	0x2b4
 1274 02a3 0F       		.uleb128 0xf
 1275 02a4 C9020000 		.4byte	.LASF40
 1276 02a8 01       		.byte	0x1
 1277 02a9 5102     		.2byte	0x251
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 39


 1278 02ab 83000000 		.4byte	0x83
 1279 02af 77010000 		.4byte	.LLST8
 1280 02b3 00       		.byte	0
 1281 02b4 0B       		.uleb128 0xb
 1282 02b5 74010000 		.4byte	.LASF41
 1283 02b9 01       		.byte	0x1
 1284 02ba 6602     		.2byte	0x266
 1285 02bc 00000000 		.4byte	.LFB10
 1286 02c0 18000000 		.4byte	.LFE10-.LFB10
 1287 02c4 01       		.uleb128 0x1
 1288 02c5 9C       		.byte	0x9c
 1289 02c6 DB020000 		.4byte	0x2db
 1290 02ca 0F       		.uleb128 0xf
 1291 02cb 83030000 		.4byte	.LASF42
 1292 02cf 01       		.byte	0x1
 1293 02d0 6602     		.2byte	0x266
 1294 02d2 83000000 		.4byte	0x83
 1295 02d6 98010000 		.4byte	.LLST9
 1296 02da 00       		.byte	0
 1297 02db 0B       		.uleb128 0xb
 1298 02dc 9D020000 		.4byte	.LASF43
 1299 02e0 01       		.byte	0x1
 1300 02e1 7E02     		.2byte	0x27e
 1301 02e3 00000000 		.4byte	.LFB11
 1302 02e7 10000000 		.4byte	.LFE11-.LFB11
 1303 02eb 01       		.uleb128 0x1
 1304 02ec 9C       		.byte	0x9c
 1305 02ed 02030000 		.4byte	0x302
 1306 02f1 0F       		.uleb128 0xf
 1307 02f2 DA010000 		.4byte	.LASF38
 1308 02f6 01       		.byte	0x1
 1309 02f7 7E02     		.2byte	0x27e
 1310 02f9 83000000 		.4byte	0x83
 1311 02fd B9010000 		.4byte	.LLST10
 1312 0301 00       		.byte	0
 1313 0302 0B       		.uleb128 0xb
 1314 0303 59000000 		.4byte	.LASF44
 1315 0307 01       		.byte	0x1
 1316 0308 9502     		.2byte	0x295
 1317 030a 00000000 		.4byte	.LFB12
 1318 030e 10000000 		.4byte	.LFE12-.LFB12
 1319 0312 01       		.uleb128 0x1
 1320 0313 9C       		.byte	0x9c
 1321 0314 29030000 		.4byte	0x329
 1322 0318 0F       		.uleb128 0xf
 1323 0319 DA010000 		.4byte	.LASF38
 1324 031d 01       		.byte	0x1
 1325 031e 9502     		.2byte	0x295
 1326 0320 83000000 		.4byte	0x83
 1327 0324 DA010000 		.4byte	.LLST11
 1328 0328 00       		.byte	0
 1329 0329 0B       		.uleb128 0xb
 1330 032a 43040000 		.4byte	.LASF45
 1331 032e 01       		.byte	0x1
 1332 032f B102     		.2byte	0x2b1
 1333 0331 00000000 		.4byte	.LFB13
 1334 0335 1C000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 40


 1335 0339 01       		.uleb128 0x1
 1336 033a 9C       		.byte	0x9c
 1337 033b 6F030000 		.4byte	0x36f
 1338 033f 0F       		.uleb128 0xf
 1339 0340 E9030000 		.4byte	.LASF35
 1340 0344 01       		.byte	0x1
 1341 0345 B102     		.2byte	0x2b1
 1342 0347 83000000 		.4byte	0x83
 1343 034b FB010000 		.4byte	.LLST12
 1344 034f 0F       		.uleb128 0xf
 1345 0350 0D040000 		.4byte	.LASF46
 1346 0354 01       		.byte	0x1
 1347 0355 B102     		.2byte	0x2b1
 1348 0357 8F000000 		.4byte	0x8f
 1349 035b 27020000 		.4byte	.LLST13
 1350 035f 0A       		.uleb128 0xa
 1351 0360 10000000 		.4byte	.LVL40
 1352 0364 6D050000 		.4byte	0x56d
 1353 0368 09       		.uleb128 0x9
 1354 0369 01       		.uleb128 0x1
 1355 036a 50       		.byte	0x50
 1356 036b 01       		.uleb128 0x1
 1357 036c 30       		.byte	0x30
 1358 036d 00       		.byte	0
 1359 036e 00       		.byte	0
 1360 036f 0B       		.uleb128 0xb
 1361 0370 5A030000 		.4byte	.LASF47
 1362 0374 01       		.byte	0x1
 1363 0375 D302     		.2byte	0x2d3
 1364 0377 00000000 		.4byte	.LFB14
 1365 037b 1C000000 		.4byte	.LFE14-.LFB14
 1366 037f 01       		.uleb128 0x1
 1367 0380 9C       		.byte	0x9c
 1368 0381 B5030000 		.4byte	0x3b5
 1369 0385 0F       		.uleb128 0xf
 1370 0386 E9030000 		.4byte	.LASF35
 1371 038a 01       		.byte	0x1
 1372 038b D302     		.2byte	0x2d3
 1373 038d 83000000 		.4byte	0x83
 1374 0391 48020000 		.4byte	.LLST14
 1375 0395 0F       		.uleb128 0xf
 1376 0396 2F000000 		.4byte	.LASF48
 1377 039a 01       		.byte	0x1
 1378 039b D302     		.2byte	0x2d3
 1379 039d 9B000000 		.4byte	0x9b
 1380 03a1 74020000 		.4byte	.LLST15
 1381 03a5 0A       		.uleb128 0xa
 1382 03a6 10000000 		.4byte	.LVL44
 1383 03aa 6D050000 		.4byte	0x56d
 1384 03ae 09       		.uleb128 0x9
 1385 03af 01       		.uleb128 0x1
 1386 03b0 50       		.byte	0x50
 1387 03b1 01       		.uleb128 0x1
 1388 03b2 30       		.byte	0x30
 1389 03b3 00       		.byte	0
 1390 03b4 00       		.byte	0
 1391 03b5 11       		.uleb128 0x11
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 41


 1392 03b6 DF010000 		.4byte	.LASF49
 1393 03ba 01       		.byte	0x1
 1394 03bb F402     		.2byte	0x2f4
 1395 03bd 8F000000 		.4byte	0x8f
 1396 03c1 00000000 		.4byte	.LFB15
 1397 03c5 5C000000 		.4byte	.LFE15-.LFB15
 1398 03c9 01       		.uleb128 0x1
 1399 03ca 9C       		.byte	0x9c
 1400 03cb 0D040000 		.4byte	0x40d
 1401 03cf 0F       		.uleb128 0xf
 1402 03d0 E9030000 		.4byte	.LASF35
 1403 03d4 01       		.byte	0x1
 1404 03d5 F402     		.2byte	0x2f4
 1405 03d7 83000000 		.4byte	0x83
 1406 03db A4020000 		.4byte	.LLST16
 1407 03df 0F       		.uleb128 0xf
 1408 03e0 14040000 		.4byte	.LASF50
 1409 03e4 01       		.byte	0x1
 1410 03e5 F402     		.2byte	0x2f4
 1411 03e7 8F000000 		.4byte	0x8f
 1412 03eb D0020000 		.4byte	.LLST17
 1413 03ef 12       		.uleb128 0x12
 1414 03f0 90020000 		.4byte	.LASF51
 1415 03f4 01       		.byte	0x1
 1416 03f5 F602     		.2byte	0x2f6
 1417 03f7 8F000000 		.4byte	0x8f
 1418 03fb 01       		.uleb128 0x1
 1419 03fc 50       		.byte	0x50
 1420 03fd 0A       		.uleb128 0xa
 1421 03fe 10000000 		.4byte	.LVL49
 1422 0402 6D050000 		.4byte	0x56d
 1423 0406 09       		.uleb128 0x9
 1424 0407 01       		.uleb128 0x1
 1425 0408 50       		.byte	0x50
 1426 0409 01       		.uleb128 0x1
 1427 040a 30       		.byte	0x30
 1428 040b 00       		.byte	0
 1429 040c 00       		.byte	0
 1430 040d 11       		.uleb128 0x11
 1431 040e 95010000 		.4byte	.LASF52
 1432 0412 01       		.byte	0x1
 1433 0413 2A03     		.2byte	0x32a
 1434 0415 9B000000 		.4byte	0x9b
 1435 0419 00000000 		.4byte	.LFB16
 1436 041d 40000000 		.4byte	.LFE16-.LFB16
 1437 0421 01       		.uleb128 0x1
 1438 0422 9C       		.byte	0x9c
 1439 0423 63040000 		.4byte	0x463
 1440 0427 0F       		.uleb128 0xf
 1441 0428 E9030000 		.4byte	.LASF35
 1442 042c 01       		.byte	0x1
 1443 042d 2A03     		.2byte	0x32a
 1444 042f 83000000 		.4byte	0x83
 1445 0433 FC020000 		.4byte	.LLST18
 1446 0437 0F       		.uleb128 0xf
 1447 0438 14040000 		.4byte	.LASF50
 1448 043c 01       		.byte	0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 42


 1449 043d 2A03     		.2byte	0x32a
 1450 043f 8F000000 		.4byte	0x8f
 1451 0443 28030000 		.4byte	.LLST19
 1452 0447 13       		.uleb128 0x13
 1453 0448 28020000 		.4byte	.LASF66
 1454 044c 01       		.byte	0x1
 1455 044d 2C03     		.2byte	0x32c
 1456 044f C1000000 		.4byte	0xc1
 1457 0453 0A       		.uleb128 0xa
 1458 0454 10000000 		.4byte	.LVL57
 1459 0458 6D050000 		.4byte	0x56d
 1460 045c 09       		.uleb128 0x9
 1461 045d 01       		.uleb128 0x1
 1462 045e 50       		.byte	0x50
 1463 045f 01       		.uleb128 0x1
 1464 0460 30       		.byte	0x30
 1465 0461 00       		.byte	0
 1466 0462 00       		.byte	0
 1467 0463 11       		.uleb128 0x11
 1468 0464 AC030000 		.4byte	.LASF53
 1469 0468 01       		.byte	0x1
 1470 0469 5703     		.2byte	0x357
 1471 046b A7000000 		.4byte	0xa7
 1472 046f 00000000 		.4byte	.LFB17
 1473 0473 48000000 		.4byte	.LFE17-.LFB17
 1474 0477 01       		.uleb128 0x1
 1475 0478 9C       		.byte	0x9c
 1476 0479 BB040000 		.4byte	0x4bb
 1477 047d 0F       		.uleb128 0xf
 1478 047e E9030000 		.4byte	.LASF35
 1479 0482 01       		.byte	0x1
 1480 0483 5703     		.2byte	0x357
 1481 0485 83000000 		.4byte	0x83
 1482 0489 54030000 		.4byte	.LLST20
 1483 048d 0F       		.uleb128 0xf
 1484 048e 14040000 		.4byte	.LASF50
 1485 0492 01       		.byte	0x1
 1486 0493 5703     		.2byte	0x357
 1487 0495 8F000000 		.4byte	0x8f
 1488 0499 80030000 		.4byte	.LLST21
 1489 049d 12       		.uleb128 0x12
 1490 049e 41020000 		.4byte	.LASF54
 1491 04a2 01       		.byte	0x1
 1492 04a3 5903     		.2byte	0x359
 1493 04a5 A7000000 		.4byte	0xa7
 1494 04a9 01       		.uleb128 0x1
 1495 04aa 50       		.byte	0x50
 1496 04ab 0A       		.uleb128 0xa
 1497 04ac 10000000 		.4byte	.LVL64
 1498 04b0 6D050000 		.4byte	0x56d
 1499 04b4 09       		.uleb128 0x9
 1500 04b5 01       		.uleb128 0x1
 1501 04b6 50       		.byte	0x50
 1502 04b7 01       		.uleb128 0x1
 1503 04b8 30       		.byte	0x30
 1504 04b9 00       		.byte	0
 1505 04ba 00       		.byte	0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 43


 1506 04bb 14       		.uleb128 0x14
 1507 04bc CB040000 		.4byte	0x4cb
 1508 04c0 CB040000 		.4byte	0x4cb
 1509 04c4 15       		.uleb128 0x15
 1510 04c5 EC000000 		.4byte	0xec
 1511 04c9 00       		.byte	0
 1512 04ca 00       		.byte	0
 1513 04cb 16       		.uleb128 0x16
 1514 04cc 83000000 		.4byte	0x83
 1515 04d0 17       		.uleb128 0x17
 1516 04d1 73020000 		.4byte	.LASF55
 1517 04d5 01       		.byte	0x1
 1518 04d6 21       		.byte	0x21
 1519 04d7 E0040000 		.4byte	0x4e0
 1520 04db 04       		.byte	0x4
 1521 04dc 00       		.byte	0
 1522 04dd 04       		.byte	0x4
 1523 04de 00       		.byte	0
 1524 04df 00       		.byte	0
 1525 04e0 16       		.uleb128 0x16
 1526 04e1 BB040000 		.4byte	0x4bb
 1527 04e5 18       		.uleb128 0x18
 1528 04e6 05020000 		.4byte	.LASF56
 1529 04ea 01       		.byte	0x1
 1530 04eb 18       		.byte	0x18
 1531 04ec 6B000000 		.4byte	0x6b
 1532 04f0 05       		.uleb128 0x5
 1533 04f1 03       		.byte	0x3
 1534 04f2 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1535 04f6 14       		.uleb128 0x14
 1536 04f7 06050000 		.4byte	0x506
 1537 04fb 06050000 		.4byte	0x506
 1538 04ff 15       		.uleb128 0x15
 1539 0500 EC000000 		.4byte	0xec
 1540 0504 00       		.byte	0
 1541 0505 00       		.byte	0
 1542 0506 05       		.uleb128 0x5
 1543 0507 8F000000 		.4byte	0x8f
 1544 050b 18       		.uleb128 0x18
 1545 050c 00000000 		.4byte	.LASF57
 1546 0510 01       		.byte	0x1
 1547 0511 19       		.byte	0x19
 1548 0512 1C050000 		.4byte	0x51c
 1549 0516 05       		.uleb128 0x5
 1550 0517 03       		.byte	0x3
 1551 0518 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1552 051c 05       		.uleb128 0x5
 1553 051d F6040000 		.4byte	0x4f6
 1554 0521 14       		.uleb128 0x14
 1555 0522 31050000 		.4byte	0x531
 1556 0526 31050000 		.4byte	0x531
 1557 052a 15       		.uleb128 0x15
 1558 052b EC000000 		.4byte	0xec
 1559 052f 00       		.byte	0
 1560 0530 00       		.byte	0
 1561 0531 05       		.uleb128 0x5
 1562 0532 9B000000 		.4byte	0x9b
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 44


 1563 0536 18       		.uleb128 0x18
 1564 0537 1E040000 		.4byte	.LASF58
 1565 053b 01       		.byte	0x1
 1566 053c 1A       		.byte	0x1a
 1567 053d 47050000 		.4byte	0x547
 1568 0541 05       		.uleb128 0x5
 1569 0542 03       		.byte	0x3
 1570 0543 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1571 0547 05       		.uleb128 0x5
 1572 0548 21050000 		.4byte	0x521
 1573 054c 19       		.uleb128 0x19
 1574 054d 1C030000 		.4byte	.LASF59
 1575 0551 1C030000 		.4byte	.LASF59
 1576 0555 03       		.byte	0x3
 1577 0556 D3       		.byte	0xd3
 1578 0557 19       		.uleb128 0x19
 1579 0558 64020000 		.4byte	.LASF60
 1580 055c 64020000 		.4byte	.LASF60
 1581 0560 03       		.byte	0x3
 1582 0561 D0       		.byte	0xd0
 1583 0562 19       		.uleb128 0x19
 1584 0563 C2010000 		.4byte	.LASF61
 1585 0567 C2010000 		.4byte	.LASF61
 1586 056b 03       		.byte	0x3
 1587 056c ED       		.byte	0xed
 1588 056d 19       		.uleb128 0x19
 1589 056e 8D030000 		.4byte	.LASF62
 1590 0572 8D030000 		.4byte	.LASF62
 1591 0576 03       		.byte	0x3
 1592 0577 FA       		.byte	0xfa
 1593 0578 00       		.byte	0
 1594              		.section	.debug_abbrev,"",%progbits
 1595              	.Ldebug_abbrev0:
 1596 0000 01       		.uleb128 0x1
 1597 0001 11       		.uleb128 0x11
 1598 0002 01       		.byte	0x1
 1599 0003 25       		.uleb128 0x25
 1600 0004 0E       		.uleb128 0xe
 1601 0005 13       		.uleb128 0x13
 1602 0006 0B       		.uleb128 0xb
 1603 0007 03       		.uleb128 0x3
 1604 0008 0E       		.uleb128 0xe
 1605 0009 1B       		.uleb128 0x1b
 1606 000a 0E       		.uleb128 0xe
 1607 000b 55       		.uleb128 0x55
 1608 000c 17       		.uleb128 0x17
 1609 000d 11       		.uleb128 0x11
 1610 000e 01       		.uleb128 0x1
 1611 000f 10       		.uleb128 0x10
 1612 0010 17       		.uleb128 0x17
 1613 0011 00       		.byte	0
 1614 0012 00       		.byte	0
 1615 0013 02       		.uleb128 0x2
 1616 0014 24       		.uleb128 0x24
 1617 0015 00       		.byte	0
 1618 0016 0B       		.uleb128 0xb
 1619 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 45


 1620 0018 3E       		.uleb128 0x3e
 1621 0019 0B       		.uleb128 0xb
 1622 001a 03       		.uleb128 0x3
 1623 001b 0E       		.uleb128 0xe
 1624 001c 00       		.byte	0
 1625 001d 00       		.byte	0
 1626 001e 03       		.uleb128 0x3
 1627 001f 24       		.uleb128 0x24
 1628 0020 00       		.byte	0
 1629 0021 0B       		.uleb128 0xb
 1630 0022 0B       		.uleb128 0xb
 1631 0023 3E       		.uleb128 0x3e
 1632 0024 0B       		.uleb128 0xb
 1633 0025 03       		.uleb128 0x3
 1634 0026 08       		.uleb128 0x8
 1635 0027 00       		.byte	0
 1636 0028 00       		.byte	0
 1637 0029 04       		.uleb128 0x4
 1638 002a 16       		.uleb128 0x16
 1639 002b 00       		.byte	0
 1640 002c 03       		.uleb128 0x3
 1641 002d 0E       		.uleb128 0xe
 1642 002e 3A       		.uleb128 0x3a
 1643 002f 0B       		.uleb128 0xb
 1644 0030 3B       		.uleb128 0x3b
 1645 0031 05       		.uleb128 0x5
 1646 0032 49       		.uleb128 0x49
 1647 0033 13       		.uleb128 0x13
 1648 0034 00       		.byte	0
 1649 0035 00       		.byte	0
 1650 0036 05       		.uleb128 0x5
 1651 0037 35       		.uleb128 0x35
 1652 0038 00       		.byte	0
 1653 0039 49       		.uleb128 0x49
 1654 003a 13       		.uleb128 0x13
 1655 003b 00       		.byte	0
 1656 003c 00       		.byte	0
 1657 003d 06       		.uleb128 0x6
 1658 003e 2E       		.uleb128 0x2e
 1659 003f 01       		.byte	0x1
 1660 0040 3F       		.uleb128 0x3f
 1661 0041 19       		.uleb128 0x19
 1662 0042 03       		.uleb128 0x3
 1663 0043 0E       		.uleb128 0xe
 1664 0044 3A       		.uleb128 0x3a
 1665 0045 0B       		.uleb128 0xb
 1666 0046 3B       		.uleb128 0x3b
 1667 0047 0B       		.uleb128 0xb
 1668 0048 27       		.uleb128 0x27
 1669 0049 19       		.uleb128 0x19
 1670 004a 11       		.uleb128 0x11
 1671 004b 01       		.uleb128 0x1
 1672 004c 12       		.uleb128 0x12
 1673 004d 06       		.uleb128 0x6
 1674 004e 40       		.uleb128 0x40
 1675 004f 18       		.uleb128 0x18
 1676 0050 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 46


 1677 0052 19       		.uleb128 0x19
 1678 0053 01       		.uleb128 0x1
 1679 0054 13       		.uleb128 0x13
 1680 0055 00       		.byte	0
 1681 0056 00       		.byte	0
 1682 0057 07       		.uleb128 0x7
 1683 0058 34       		.uleb128 0x34
 1684 0059 00       		.byte	0
 1685 005a 03       		.uleb128 0x3
 1686 005b 0E       		.uleb128 0xe
 1687 005c 3A       		.uleb128 0x3a
 1688 005d 0B       		.uleb128 0xb
 1689 005e 3B       		.uleb128 0x3b
 1690 005f 0B       		.uleb128 0xb
 1691 0060 49       		.uleb128 0x49
 1692 0061 13       		.uleb128 0x13
 1693 0062 02       		.uleb128 0x2
 1694 0063 17       		.uleb128 0x17
 1695 0064 00       		.byte	0
 1696 0065 00       		.byte	0
 1697 0066 08       		.uleb128 0x8
 1698 0067 898201   		.uleb128 0x4109
 1699 006a 01       		.byte	0x1
 1700 006b 11       		.uleb128 0x11
 1701 006c 01       		.uleb128 0x1
 1702 006d 31       		.uleb128 0x31
 1703 006e 13       		.uleb128 0x13
 1704 006f 01       		.uleb128 0x1
 1705 0070 13       		.uleb128 0x13
 1706 0071 00       		.byte	0
 1707 0072 00       		.byte	0
 1708 0073 09       		.uleb128 0x9
 1709 0074 8A8201   		.uleb128 0x410a
 1710 0077 00       		.byte	0
 1711 0078 02       		.uleb128 0x2
 1712 0079 18       		.uleb128 0x18
 1713 007a 9142     		.uleb128 0x2111
 1714 007c 18       		.uleb128 0x18
 1715 007d 00       		.byte	0
 1716 007e 00       		.byte	0
 1717 007f 0A       		.uleb128 0xa
 1718 0080 898201   		.uleb128 0x4109
 1719 0083 01       		.byte	0x1
 1720 0084 11       		.uleb128 0x11
 1721 0085 01       		.uleb128 0x1
 1722 0086 31       		.uleb128 0x31
 1723 0087 13       		.uleb128 0x13
 1724 0088 00       		.byte	0
 1725 0089 00       		.byte	0
 1726 008a 0B       		.uleb128 0xb
 1727 008b 2E       		.uleb128 0x2e
 1728 008c 01       		.byte	0x1
 1729 008d 3F       		.uleb128 0x3f
 1730 008e 19       		.uleb128 0x19
 1731 008f 03       		.uleb128 0x3
 1732 0090 0E       		.uleb128 0xe
 1733 0091 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 47


 1734 0092 0B       		.uleb128 0xb
 1735 0093 3B       		.uleb128 0x3b
 1736 0094 05       		.uleb128 0x5
 1737 0095 27       		.uleb128 0x27
 1738 0096 19       		.uleb128 0x19
 1739 0097 11       		.uleb128 0x11
 1740 0098 01       		.uleb128 0x1
 1741 0099 12       		.uleb128 0x12
 1742 009a 06       		.uleb128 0x6
 1743 009b 40       		.uleb128 0x40
 1744 009c 18       		.uleb128 0x18
 1745 009d 9742     		.uleb128 0x2117
 1746 009f 19       		.uleb128 0x19
 1747 00a0 01       		.uleb128 0x1
 1748 00a1 13       		.uleb128 0x13
 1749 00a2 00       		.byte	0
 1750 00a3 00       		.byte	0
 1751 00a4 0C       		.uleb128 0xc
 1752 00a5 898201   		.uleb128 0x4109
 1753 00a8 00       		.byte	0
 1754 00a9 11       		.uleb128 0x11
 1755 00aa 01       		.uleb128 0x1
 1756 00ab 31       		.uleb128 0x31
 1757 00ac 13       		.uleb128 0x13
 1758 00ad 00       		.byte	0
 1759 00ae 00       		.byte	0
 1760 00af 0D       		.uleb128 0xd
 1761 00b0 2E       		.uleb128 0x2e
 1762 00b1 00       		.byte	0
 1763 00b2 3F       		.uleb128 0x3f
 1764 00b3 19       		.uleb128 0x19
 1765 00b4 03       		.uleb128 0x3
 1766 00b5 0E       		.uleb128 0xe
 1767 00b6 3A       		.uleb128 0x3a
 1768 00b7 0B       		.uleb128 0xb
 1769 00b8 3B       		.uleb128 0x3b
 1770 00b9 05       		.uleb128 0x5
 1771 00ba 27       		.uleb128 0x27
 1772 00bb 19       		.uleb128 0x19
 1773 00bc 11       		.uleb128 0x11
 1774 00bd 01       		.uleb128 0x1
 1775 00be 12       		.uleb128 0x12
 1776 00bf 06       		.uleb128 0x6
 1777 00c0 40       		.uleb128 0x40
 1778 00c1 18       		.uleb128 0x18
 1779 00c2 9742     		.uleb128 0x2117
 1780 00c4 19       		.uleb128 0x19
 1781 00c5 00       		.byte	0
 1782 00c6 00       		.byte	0
 1783 00c7 0E       		.uleb128 0xe
 1784 00c8 2E       		.uleb128 0x2e
 1785 00c9 01       		.byte	0x1
 1786 00ca 3F       		.uleb128 0x3f
 1787 00cb 19       		.uleb128 0x19
 1788 00cc 03       		.uleb128 0x3
 1789 00cd 0E       		.uleb128 0xe
 1790 00ce 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 48


 1791 00cf 0B       		.uleb128 0xb
 1792 00d0 3B       		.uleb128 0x3b
 1793 00d1 05       		.uleb128 0x5
 1794 00d2 27       		.uleb128 0x27
 1795 00d3 19       		.uleb128 0x19
 1796 00d4 49       		.uleb128 0x49
 1797 00d5 13       		.uleb128 0x13
 1798 00d6 11       		.uleb128 0x11
 1799 00d7 01       		.uleb128 0x1
 1800 00d8 12       		.uleb128 0x12
 1801 00d9 06       		.uleb128 0x6
 1802 00da 40       		.uleb128 0x40
 1803 00db 18       		.uleb128 0x18
 1804 00dc 9742     		.uleb128 0x2117
 1805 00de 19       		.uleb128 0x19
 1806 00df 01       		.uleb128 0x1
 1807 00e0 13       		.uleb128 0x13
 1808 00e1 00       		.byte	0
 1809 00e2 00       		.byte	0
 1810 00e3 0F       		.uleb128 0xf
 1811 00e4 05       		.uleb128 0x5
 1812 00e5 00       		.byte	0
 1813 00e6 03       		.uleb128 0x3
 1814 00e7 0E       		.uleb128 0xe
 1815 00e8 3A       		.uleb128 0x3a
 1816 00e9 0B       		.uleb128 0xb
 1817 00ea 3B       		.uleb128 0x3b
 1818 00eb 05       		.uleb128 0x5
 1819 00ec 49       		.uleb128 0x49
 1820 00ed 13       		.uleb128 0x13
 1821 00ee 02       		.uleb128 0x2
 1822 00ef 17       		.uleb128 0x17
 1823 00f0 00       		.byte	0
 1824 00f1 00       		.byte	0
 1825 00f2 10       		.uleb128 0x10
 1826 00f3 34       		.uleb128 0x34
 1827 00f4 00       		.byte	0
 1828 00f5 03       		.uleb128 0x3
 1829 00f6 0E       		.uleb128 0xe
 1830 00f7 3A       		.uleb128 0x3a
 1831 00f8 0B       		.uleb128 0xb
 1832 00f9 3B       		.uleb128 0x3b
 1833 00fa 05       		.uleb128 0x5
 1834 00fb 49       		.uleb128 0x49
 1835 00fc 13       		.uleb128 0x13
 1836 00fd 02       		.uleb128 0x2
 1837 00fe 17       		.uleb128 0x17
 1838 00ff 00       		.byte	0
 1839 0100 00       		.byte	0
 1840 0101 11       		.uleb128 0x11
 1841 0102 2E       		.uleb128 0x2e
 1842 0103 01       		.byte	0x1
 1843 0104 3F       		.uleb128 0x3f
 1844 0105 19       		.uleb128 0x19
 1845 0106 03       		.uleb128 0x3
 1846 0107 0E       		.uleb128 0xe
 1847 0108 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 49


 1848 0109 0B       		.uleb128 0xb
 1849 010a 3B       		.uleb128 0x3b
 1850 010b 05       		.uleb128 0x5
 1851 010c 27       		.uleb128 0x27
 1852 010d 19       		.uleb128 0x19
 1853 010e 49       		.uleb128 0x49
 1854 010f 13       		.uleb128 0x13
 1855 0110 11       		.uleb128 0x11
 1856 0111 01       		.uleb128 0x1
 1857 0112 12       		.uleb128 0x12
 1858 0113 06       		.uleb128 0x6
 1859 0114 40       		.uleb128 0x40
 1860 0115 18       		.uleb128 0x18
 1861 0116 9642     		.uleb128 0x2116
 1862 0118 19       		.uleb128 0x19
 1863 0119 01       		.uleb128 0x1
 1864 011a 13       		.uleb128 0x13
 1865 011b 00       		.byte	0
 1866 011c 00       		.byte	0
 1867 011d 12       		.uleb128 0x12
 1868 011e 34       		.uleb128 0x34
 1869 011f 00       		.byte	0
 1870 0120 03       		.uleb128 0x3
 1871 0121 0E       		.uleb128 0xe
 1872 0122 3A       		.uleb128 0x3a
 1873 0123 0B       		.uleb128 0xb
 1874 0124 3B       		.uleb128 0x3b
 1875 0125 05       		.uleb128 0x5
 1876 0126 49       		.uleb128 0x49
 1877 0127 13       		.uleb128 0x13
 1878 0128 02       		.uleb128 0x2
 1879 0129 18       		.uleb128 0x18
 1880 012a 00       		.byte	0
 1881 012b 00       		.byte	0
 1882 012c 13       		.uleb128 0x13
 1883 012d 34       		.uleb128 0x34
 1884 012e 00       		.byte	0
 1885 012f 03       		.uleb128 0x3
 1886 0130 0E       		.uleb128 0xe
 1887 0131 3A       		.uleb128 0x3a
 1888 0132 0B       		.uleb128 0xb
 1889 0133 3B       		.uleb128 0x3b
 1890 0134 05       		.uleb128 0x5
 1891 0135 49       		.uleb128 0x49
 1892 0136 13       		.uleb128 0x13
 1893 0137 00       		.byte	0
 1894 0138 00       		.byte	0
 1895 0139 14       		.uleb128 0x14
 1896 013a 01       		.uleb128 0x1
 1897 013b 01       		.byte	0x1
 1898 013c 49       		.uleb128 0x49
 1899 013d 13       		.uleb128 0x13
 1900 013e 01       		.uleb128 0x1
 1901 013f 13       		.uleb128 0x13
 1902 0140 00       		.byte	0
 1903 0141 00       		.byte	0
 1904 0142 15       		.uleb128 0x15
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 50


 1905 0143 21       		.uleb128 0x21
 1906 0144 00       		.byte	0
 1907 0145 49       		.uleb128 0x49
 1908 0146 13       		.uleb128 0x13
 1909 0147 2F       		.uleb128 0x2f
 1910 0148 0B       		.uleb128 0xb
 1911 0149 00       		.byte	0
 1912 014a 00       		.byte	0
 1913 014b 16       		.uleb128 0x16
 1914 014c 26       		.uleb128 0x26
 1915 014d 00       		.byte	0
 1916 014e 49       		.uleb128 0x49
 1917 014f 13       		.uleb128 0x13
 1918 0150 00       		.byte	0
 1919 0151 00       		.byte	0
 1920 0152 17       		.uleb128 0x17
 1921 0153 34       		.uleb128 0x34
 1922 0154 00       		.byte	0
 1923 0155 03       		.uleb128 0x3
 1924 0156 0E       		.uleb128 0xe
 1925 0157 3A       		.uleb128 0x3a
 1926 0158 0B       		.uleb128 0xb
 1927 0159 3B       		.uleb128 0x3b
 1928 015a 0B       		.uleb128 0xb
 1929 015b 49       		.uleb128 0x49
 1930 015c 13       		.uleb128 0x13
 1931 015d 1C       		.uleb128 0x1c
 1932 015e 0A       		.uleb128 0xa
 1933 015f 00       		.byte	0
 1934 0160 00       		.byte	0
 1935 0161 18       		.uleb128 0x18
 1936 0162 34       		.uleb128 0x34
 1937 0163 00       		.byte	0
 1938 0164 03       		.uleb128 0x3
 1939 0165 0E       		.uleb128 0xe
 1940 0166 3A       		.uleb128 0x3a
 1941 0167 0B       		.uleb128 0xb
 1942 0168 3B       		.uleb128 0x3b
 1943 0169 0B       		.uleb128 0xb
 1944 016a 49       		.uleb128 0x49
 1945 016b 13       		.uleb128 0x13
 1946 016c 3F       		.uleb128 0x3f
 1947 016d 19       		.uleb128 0x19
 1948 016e 02       		.uleb128 0x2
 1949 016f 18       		.uleb128 0x18
 1950 0170 00       		.byte	0
 1951 0171 00       		.byte	0
 1952 0172 19       		.uleb128 0x19
 1953 0173 2E       		.uleb128 0x2e
 1954 0174 00       		.byte	0
 1955 0175 3F       		.uleb128 0x3f
 1956 0176 19       		.uleb128 0x19
 1957 0177 3C       		.uleb128 0x3c
 1958 0178 19       		.uleb128 0x19
 1959 0179 6E       		.uleb128 0x6e
 1960 017a 0E       		.uleb128 0xe
 1961 017b 03       		.uleb128 0x3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 51


 1962 017c 0E       		.uleb128 0xe
 1963 017d 3A       		.uleb128 0x3a
 1964 017e 0B       		.uleb128 0xb
 1965 017f 3B       		.uleb128 0x3b
 1966 0180 0B       		.uleb128 0xb
 1967 0181 00       		.byte	0
 1968 0182 00       		.byte	0
 1969 0183 00       		.byte	0
 1970              		.section	.debug_loc,"",%progbits
 1971              	.Ldebug_loc0:
 1972              	.LLST0:
 1973 0000 7A000000 		.4byte	.LVL5
 1974 0004 7E000000 		.4byte	.LVL7
 1975 0008 0200     		.2byte	0x2
 1976 000a 30       		.byte	0x30
 1977 000b 9F       		.byte	0x9f
 1978 000c 7E000000 		.4byte	.LVL7
 1979 0010 04010000 		.4byte	.LFE1
 1980 0014 0100     		.2byte	0x1
 1981 0016 53       		.byte	0x53
 1982 0017 00000000 		.4byte	0
 1983 001b 00000000 		.4byte	0
 1984              	.LLST1:
 1985 001f 72000000 		.4byte	.LVL2
 1986 0023 76000000 		.4byte	.LVL3
 1987 0027 0100     		.2byte	0x1
 1988 0029 50       		.byte	0x50
 1989 002a 76000000 		.4byte	.LVL3
 1990 002e 78000000 		.4byte	.LVL4
 1991 0032 0100     		.2byte	0x1
 1992 0034 52       		.byte	0x52
 1993 0035 78000000 		.4byte	.LVL4
 1994 0039 7C000000 		.4byte	.LVL6
 1995 003d 0100     		.2byte	0x1
 1996 003f 53       		.byte	0x53
 1997 0040 7C000000 		.4byte	.LVL6
 1998 0044 7E000000 		.4byte	.LVL7
 1999 0048 0200     		.2byte	0x2
 2000 004a 71       		.byte	0x71
 2001 004b 00       		.sleb128 0
 2002 004c 7E000000 		.4byte	.LVL7
 2003 0050 9A000000 		.4byte	.LVL9
 2004 0054 0400     		.2byte	0x4
 2005 0056 0A       		.byte	0xa
 2006 0057 0004     		.2byte	0x400
 2007 0059 9F       		.byte	0x9f
 2008 005a 00000000 		.4byte	0
 2009 005e 00000000 		.4byte	0
 2010              	.LLST2:
 2011 0062 8A000000 		.4byte	.LVL8
 2012 0066 9A000000 		.4byte	.LVL9
 2013 006a 0400     		.2byte	0x4
 2014 006c 0A       		.byte	0xa
 2015 006d 0010     		.2byte	0x1000
 2016 006f 9F       		.byte	0x9f
 2017 0070 00000000 		.4byte	0
 2018 0074 00000000 		.4byte	0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 52


 2019              	.LLST3:
 2020 0078 00000000 		.4byte	.LVL13
 2021 007c 06000000 		.4byte	.LVL15
 2022 0080 0100     		.2byte	0x1
 2023 0082 50       		.byte	0x50
 2024 0083 06000000 		.4byte	.LVL15
 2025 0087 1A000000 		.4byte	.LVL17
 2026 008b 0100     		.2byte	0x1
 2027 008d 52       		.byte	0x52
 2028 008e 1A000000 		.4byte	.LVL17
 2029 0092 20000000 		.4byte	.LVL18
 2030 0096 0400     		.2byte	0x4
 2031 0098 F3       		.byte	0xf3
 2032 0099 01       		.uleb128 0x1
 2033 009a 50       		.byte	0x50
 2034 009b 9F       		.byte	0x9f
 2035 009c 20000000 		.4byte	.LVL18
 2036 00a0 22000000 		.4byte	.LVL19
 2037 00a4 0100     		.2byte	0x1
 2038 00a6 50       		.byte	0x50
 2039 00a7 22000000 		.4byte	.LVL19
 2040 00ab 28000000 		.4byte	.LFE6
 2041 00af 0400     		.2byte	0x4
 2042 00b1 F3       		.byte	0xf3
 2043 00b2 01       		.uleb128 0x1
 2044 00b3 50       		.byte	0x50
 2045 00b4 9F       		.byte	0x9f
 2046 00b5 00000000 		.4byte	0
 2047 00b9 00000000 		.4byte	0
 2048              	.LLST4:
 2049 00bd 02000000 		.4byte	.LVL14
 2050 00c1 06000000 		.4byte	.LVL15
 2051 00c5 0200     		.2byte	0x2
 2052 00c7 30       		.byte	0x30
 2053 00c8 9F       		.byte	0x9f
 2054 00c9 0E000000 		.4byte	.LVL16
 2055 00cd 20000000 		.4byte	.LVL18
 2056 00d1 0100     		.2byte	0x1
 2057 00d3 50       		.byte	0x50
 2058 00d4 20000000 		.4byte	.LVL18
 2059 00d8 22000000 		.4byte	.LVL19
 2060 00dc 0200     		.2byte	0x2
 2061 00de 30       		.byte	0x30
 2062 00df 9F       		.byte	0x9f
 2063 00e0 22000000 		.4byte	.LVL19
 2064 00e4 28000000 		.4byte	.LFE6
 2065 00e8 0100     		.2byte	0x1
 2066 00ea 50       		.byte	0x50
 2067 00eb 00000000 		.4byte	0
 2068 00ef 00000000 		.4byte	0
 2069              	.LLST5:
 2070 00f3 00000000 		.4byte	.LVL20
 2071 00f7 08000000 		.4byte	.LVL21
 2072 00fb 0100     		.2byte	0x1
 2073 00fd 50       		.byte	0x50
 2074 00fe 08000000 		.4byte	.LVL21
 2075 0102 12000000 		.4byte	.LVL23
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 53


 2076 0106 0100     		.2byte	0x1
 2077 0108 54       		.byte	0x54
 2078 0109 12000000 		.4byte	.LVL23
 2079 010d 20000000 		.4byte	.LVL25
 2080 0111 0400     		.2byte	0x4
 2081 0113 F3       		.byte	0xf3
 2082 0114 01       		.uleb128 0x1
 2083 0115 50       		.byte	0x50
 2084 0116 9F       		.byte	0x9f
 2085 0117 20000000 		.4byte	.LVL25
 2086 011b 22000000 		.4byte	.LVL26
 2087 011f 0100     		.2byte	0x1
 2088 0121 54       		.byte	0x54
 2089 0122 22000000 		.4byte	.LVL26
 2090 0126 2C000000 		.4byte	.LFE7
 2091 012a 0400     		.2byte	0x4
 2092 012c F3       		.byte	0xf3
 2093 012d 01       		.uleb128 0x1
 2094 012e 50       		.byte	0x50
 2095 012f 9F       		.byte	0x9f
 2096 0130 00000000 		.4byte	0
 2097 0134 00000000 		.4byte	0
 2098              	.LLST6:
 2099 0138 1E000000 		.4byte	.LVL24
 2100 013c 20000000 		.4byte	.LVL25
 2101 0140 0100     		.2byte	0x1
 2102 0142 50       		.byte	0x50
 2103 0143 22000000 		.4byte	.LVL26
 2104 0147 24000000 		.4byte	.LVL27
 2105 014b 0100     		.2byte	0x1
 2106 014d 50       		.byte	0x50
 2107 014e 00000000 		.4byte	0
 2108 0152 00000000 		.4byte	0
 2109              	.LLST7:
 2110 0156 00000000 		.4byte	.LVL28
 2111 015a 04000000 		.4byte	.LVL29
 2112 015e 0100     		.2byte	0x1
 2113 0160 50       		.byte	0x50
 2114 0161 04000000 		.4byte	.LVL29
 2115 0165 10000000 		.4byte	.LFE8
 2116 0169 0400     		.2byte	0x4
 2117 016b F3       		.byte	0xf3
 2118 016c 01       		.uleb128 0x1
 2119 016d 50       		.byte	0x50
 2120 016e 9F       		.byte	0x9f
 2121 016f 00000000 		.4byte	0
 2122 0173 00000000 		.4byte	0
 2123              	.LLST8:
 2124 0177 00000000 		.4byte	.LVL30
 2125 017b 0E000000 		.4byte	.LVL31
 2126 017f 0100     		.2byte	0x1
 2127 0181 50       		.byte	0x50
 2128 0182 0E000000 		.4byte	.LVL31
 2129 0186 1C000000 		.4byte	.LFE9
 2130 018a 0400     		.2byte	0x4
 2131 018c F3       		.byte	0xf3
 2132 018d 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 54


 2133 018e 50       		.byte	0x50
 2134 018f 9F       		.byte	0x9f
 2135 0190 00000000 		.4byte	0
 2136 0194 00000000 		.4byte	0
 2137              	.LLST9:
 2138 0198 00000000 		.4byte	.LVL32
 2139 019c 0E000000 		.4byte	.LVL33
 2140 01a0 0100     		.2byte	0x1
 2141 01a2 50       		.byte	0x50
 2142 01a3 0E000000 		.4byte	.LVL33
 2143 01a7 18000000 		.4byte	.LFE10
 2144 01ab 0400     		.2byte	0x4
 2145 01ad F3       		.byte	0xf3
 2146 01ae 01       		.uleb128 0x1
 2147 01af 50       		.byte	0x50
 2148 01b0 9F       		.byte	0x9f
 2149 01b1 00000000 		.4byte	0
 2150 01b5 00000000 		.4byte	0
 2151              	.LLST10:
 2152 01b9 00000000 		.4byte	.LVL34
 2153 01bd 04000000 		.4byte	.LVL35
 2154 01c1 0100     		.2byte	0x1
 2155 01c3 50       		.byte	0x50
 2156 01c4 04000000 		.4byte	.LVL35
 2157 01c8 10000000 		.4byte	.LFE11
 2158 01cc 0400     		.2byte	0x4
 2159 01ce F3       		.byte	0xf3
 2160 01cf 01       		.uleb128 0x1
 2161 01d0 50       		.byte	0x50
 2162 01d1 9F       		.byte	0x9f
 2163 01d2 00000000 		.4byte	0
 2164 01d6 00000000 		.4byte	0
 2165              	.LLST11:
 2166 01da 00000000 		.4byte	.LVL36
 2167 01de 04000000 		.4byte	.LVL37
 2168 01e2 0100     		.2byte	0x1
 2169 01e4 50       		.byte	0x50
 2170 01e5 04000000 		.4byte	.LVL37
 2171 01e9 10000000 		.4byte	.LFE12
 2172 01ed 0400     		.2byte	0x4
 2173 01ef F3       		.byte	0xf3
 2174 01f0 01       		.uleb128 0x1
 2175 01f1 50       		.byte	0x50
 2176 01f2 9F       		.byte	0x9f
 2177 01f3 00000000 		.4byte	0
 2178 01f7 00000000 		.4byte	0
 2179              	.LLST12:
 2180 01fb 00000000 		.4byte	.LVL38
 2181 01ff 0C000000 		.4byte	.LVL39
 2182 0203 0100     		.2byte	0x1
 2183 0205 50       		.byte	0x50
 2184 0206 0C000000 		.4byte	.LVL39
 2185 020a 12000000 		.4byte	.LVL41
 2186 020e 0100     		.2byte	0x1
 2187 0210 54       		.byte	0x54
 2188 0211 12000000 		.4byte	.LVL41
 2189 0215 1C000000 		.4byte	.LFE13
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 55


 2190 0219 0400     		.2byte	0x4
 2191 021b F3       		.byte	0xf3
 2192 021c 01       		.uleb128 0x1
 2193 021d 50       		.byte	0x50
 2194 021e 9F       		.byte	0x9f
 2195 021f 00000000 		.4byte	0
 2196 0223 00000000 		.4byte	0
 2197              	.LLST13:
 2198 0227 00000000 		.4byte	.LVL38
 2199 022b 0F000000 		.4byte	.LVL40-1
 2200 022f 0100     		.2byte	0x1
 2201 0231 51       		.byte	0x51
 2202 0232 0F000000 		.4byte	.LVL40-1
 2203 0236 1C000000 		.4byte	.LFE13
 2204 023a 0400     		.2byte	0x4
 2205 023c F3       		.byte	0xf3
 2206 023d 01       		.uleb128 0x1
 2207 023e 51       		.byte	0x51
 2208 023f 9F       		.byte	0x9f
 2209 0240 00000000 		.4byte	0
 2210 0244 00000000 		.4byte	0
 2211              	.LLST14:
 2212 0248 00000000 		.4byte	.LVL42
 2213 024c 0C000000 		.4byte	.LVL43
 2214 0250 0100     		.2byte	0x1
 2215 0252 50       		.byte	0x50
 2216 0253 0C000000 		.4byte	.LVL43
 2217 0257 12000000 		.4byte	.LVL45
 2218 025b 0100     		.2byte	0x1
 2219 025d 54       		.byte	0x54
 2220 025e 12000000 		.4byte	.LVL45
 2221 0262 1C000000 		.4byte	.LFE14
 2222 0266 0400     		.2byte	0x4
 2223 0268 F3       		.byte	0xf3
 2224 0269 01       		.uleb128 0x1
 2225 026a 50       		.byte	0x50
 2226 026b 9F       		.byte	0x9f
 2227 026c 00000000 		.4byte	0
 2228 0270 00000000 		.4byte	0
 2229              	.LLST15:
 2230 0274 00000000 		.4byte	.LVL42
 2231 0278 0F000000 		.4byte	.LVL44-1
 2232 027c 0100     		.2byte	0x1
 2233 027e 51       		.byte	0x51
 2234 027f 0F000000 		.4byte	.LVL44-1
 2235 0283 16000000 		.4byte	.LVL46
 2236 0287 0100     		.2byte	0x1
 2237 0289 55       		.byte	0x55
 2238 028a 16000000 		.4byte	.LVL46
 2239 028e 1C000000 		.4byte	.LFE14
 2240 0292 0800     		.2byte	0x8
 2241 0294 F3       		.byte	0xf3
 2242 0295 01       		.uleb128 0x1
 2243 0296 50       		.byte	0x50
 2244 0297 32       		.byte	0x32
 2245 0298 24       		.byte	0x24
 2246 0299 73       		.byte	0x73
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 56


 2247 029a 00       		.sleb128 0
 2248 029b 22       		.byte	0x22
 2249 029c 00000000 		.4byte	0
 2250 02a0 00000000 		.4byte	0
 2251              	.LLST16:
 2252 02a4 00000000 		.4byte	.LVL47
 2253 02a8 0C000000 		.4byte	.LVL48
 2254 02ac 0100     		.2byte	0x1
 2255 02ae 50       		.byte	0x50
 2256 02af 0C000000 		.4byte	.LVL48
 2257 02b3 44000000 		.4byte	.LVL51
 2258 02b7 0100     		.2byte	0x1
 2259 02b9 54       		.byte	0x54
 2260 02ba 44000000 		.4byte	.LVL51
 2261 02be 5C000000 		.4byte	.LFE15
 2262 02c2 0400     		.2byte	0x4
 2263 02c4 F3       		.byte	0xf3
 2264 02c5 01       		.uleb128 0x1
 2265 02c6 50       		.byte	0x50
 2266 02c7 9F       		.byte	0x9f
 2267 02c8 00000000 		.4byte	0
 2268 02cc 00000000 		.4byte	0
 2269              	.LLST17:
 2270 02d0 00000000 		.4byte	.LVL47
 2271 02d4 0F000000 		.4byte	.LVL49-1
 2272 02d8 0100     		.2byte	0x1
 2273 02da 51       		.byte	0x51
 2274 02db 0F000000 		.4byte	.LVL49-1
 2275 02df 1C000000 		.4byte	.LVL50
 2276 02e3 0400     		.2byte	0x4
 2277 02e5 F3       		.byte	0xf3
 2278 02e6 01       		.uleb128 0x1
 2279 02e7 51       		.byte	0x51
 2280 02e8 9F       		.byte	0x9f
 2281 02e9 1C000000 		.4byte	.LVL50
 2282 02ed 48000000 		.4byte	.LVL52
 2283 02f1 0100     		.2byte	0x1
 2284 02f3 51       		.byte	0x51
 2285 02f4 00000000 		.4byte	0
 2286 02f8 00000000 		.4byte	0
 2287              	.LLST18:
 2288 02fc 00000000 		.4byte	.LVL55
 2289 0300 0C000000 		.4byte	.LVL56
 2290 0304 0100     		.2byte	0x1
 2291 0306 50       		.byte	0x50
 2292 0307 0C000000 		.4byte	.LVL56
 2293 030b 28000000 		.4byte	.LVL60
 2294 030f 0100     		.2byte	0x1
 2295 0311 55       		.byte	0x55
 2296 0312 28000000 		.4byte	.LVL60
 2297 0316 40000000 		.4byte	.LFE16
 2298 031a 0400     		.2byte	0x4
 2299 031c F3       		.byte	0xf3
 2300 031d 01       		.uleb128 0x1
 2301 031e 50       		.byte	0x50
 2302 031f 9F       		.byte	0x9f
 2303 0320 00000000 		.4byte	0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 57


 2304 0324 00000000 		.4byte	0
 2305              	.LLST19:
 2306 0328 00000000 		.4byte	.LVL55
 2307 032c 0F000000 		.4byte	.LVL57-1
 2308 0330 0100     		.2byte	0x1
 2309 0332 51       		.byte	0x51
 2310 0333 0F000000 		.4byte	.LVL57-1
 2311 0337 1C000000 		.4byte	.LVL58
 2312 033b 0400     		.2byte	0x4
 2313 033d F3       		.byte	0xf3
 2314 033e 01       		.uleb128 0x1
 2315 033f 51       		.byte	0x51
 2316 0340 9F       		.byte	0x9f
 2317 0341 1C000000 		.4byte	.LVL58
 2318 0345 25000000 		.4byte	.LVL59-1
 2319 0349 0100     		.2byte	0x1
 2320 034b 50       		.byte	0x50
 2321 034c 00000000 		.4byte	0
 2322 0350 00000000 		.4byte	0
 2323              	.LLST20:
 2324 0354 00000000 		.4byte	.LVL62
 2325 0358 0C000000 		.4byte	.LVL63
 2326 035c 0100     		.2byte	0x1
 2327 035e 50       		.byte	0x50
 2328 035f 0C000000 		.4byte	.LVL63
 2329 0363 2A000000 		.4byte	.LVL68
 2330 0367 0100     		.2byte	0x1
 2331 0369 54       		.byte	0x54
 2332 036a 2A000000 		.4byte	.LVL68
 2333 036e 48000000 		.4byte	.LFE17
 2334 0372 0400     		.2byte	0x4
 2335 0374 F3       		.byte	0xf3
 2336 0375 01       		.uleb128 0x1
 2337 0376 50       		.byte	0x50
 2338 0377 9F       		.byte	0x9f
 2339 0378 00000000 		.4byte	0
 2340 037c 00000000 		.4byte	0
 2341              	.LLST21:
 2342 0380 00000000 		.4byte	.LVL62
 2343 0384 0F000000 		.4byte	.LVL64-1
 2344 0388 0100     		.2byte	0x1
 2345 038a 51       		.byte	0x51
 2346 038b 0F000000 		.4byte	.LVL64-1
 2347 038f 1C000000 		.4byte	.LVL65
 2348 0393 0400     		.2byte	0x4
 2349 0395 F3       		.byte	0xf3
 2350 0396 01       		.uleb128 0x1
 2351 0397 51       		.byte	0x51
 2352 0398 9F       		.byte	0x9f
 2353 0399 1C000000 		.4byte	.LVL65
 2354 039d 1F000000 		.4byte	.LVL66-1
 2355 03a1 0100     		.2byte	0x1
 2356 03a3 50       		.byte	0x50
 2357 03a4 00000000 		.4byte	0
 2358 03a8 00000000 		.4byte	0
 2359              		.section	.debug_aranges,"",%progbits
 2360 0000 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 58


 2361 0004 0200     		.2byte	0x2
 2362 0006 00000000 		.4byte	.Ldebug_info0
 2363 000a 04       		.byte	0x4
 2364 000b 00       		.byte	0
 2365 000c 0000     		.2byte	0
 2366 000e 0000     		.2byte	0
 2367 0010 00000000 		.4byte	.LFB1
 2368 0014 04010000 		.4byte	.LFE1-.LFB1
 2369 0018 00000000 		.4byte	.LFB2
 2370 001c 24000000 		.4byte	.LFE2-.LFB2
 2371 0020 00000000 		.4byte	.LFB0
 2372 0024 20000000 		.4byte	.LFE0-.LFB0
 2373 0028 00000000 		.4byte	.LFB3
 2374 002c 10000000 		.4byte	.LFE3-.LFB3
 2375 0030 00000000 		.4byte	.LFB4
 2376 0034 14000000 		.4byte	.LFE4-.LFB4
 2377 0038 00000000 		.4byte	.LFB5
 2378 003c 14000000 		.4byte	.LFE5-.LFB5
 2379 0040 00000000 		.4byte	.LFB6
 2380 0044 28000000 		.4byte	.LFE6-.LFB6
 2381 0048 00000000 		.4byte	.LFB7
 2382 004c 2C000000 		.4byte	.LFE7-.LFB7
 2383 0050 00000000 		.4byte	.LFB8
 2384 0054 10000000 		.4byte	.LFE8-.LFB8
 2385 0058 00000000 		.4byte	.LFB9
 2386 005c 1C000000 		.4byte	.LFE9-.LFB9
 2387 0060 00000000 		.4byte	.LFB10
 2388 0064 18000000 		.4byte	.LFE10-.LFB10
 2389 0068 00000000 		.4byte	.LFB11
 2390 006c 10000000 		.4byte	.LFE11-.LFB11
 2391 0070 00000000 		.4byte	.LFB12
 2392 0074 10000000 		.4byte	.LFE12-.LFB12
 2393 0078 00000000 		.4byte	.LFB13
 2394 007c 1C000000 		.4byte	.LFE13-.LFB13
 2395 0080 00000000 		.4byte	.LFB14
 2396 0084 1C000000 		.4byte	.LFE14-.LFB14
 2397 0088 00000000 		.4byte	.LFB15
 2398 008c 5C000000 		.4byte	.LFE15-.LFB15
 2399 0090 00000000 		.4byte	.LFB16
 2400 0094 40000000 		.4byte	.LFE16-.LFB16
 2401 0098 00000000 		.4byte	.LFB17
 2402 009c 48000000 		.4byte	.LFE17-.LFB17
 2403 00a0 00000000 		.4byte	0
 2404 00a4 00000000 		.4byte	0
 2405              		.section	.debug_ranges,"",%progbits
 2406              	.Ldebug_ranges0:
 2407 0000 00000000 		.4byte	.LFB1
 2408 0004 04010000 		.4byte	.LFE1
 2409 0008 00000000 		.4byte	.LFB2
 2410 000c 24000000 		.4byte	.LFE2
 2411 0010 00000000 		.4byte	.LFB0
 2412 0014 20000000 		.4byte	.LFE0
 2413 0018 00000000 		.4byte	.LFB3
 2414 001c 10000000 		.4byte	.LFE3
 2415 0020 00000000 		.4byte	.LFB4
 2416 0024 14000000 		.4byte	.LFE4
 2417 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 59


 2418 002c 14000000 		.4byte	.LFE5
 2419 0030 00000000 		.4byte	.LFB6
 2420 0034 28000000 		.4byte	.LFE6
 2421 0038 00000000 		.4byte	.LFB7
 2422 003c 2C000000 		.4byte	.LFE7
 2423 0040 00000000 		.4byte	.LFB8
 2424 0044 10000000 		.4byte	.LFE8
 2425 0048 00000000 		.4byte	.LFB9
 2426 004c 1C000000 		.4byte	.LFE9
 2427 0050 00000000 		.4byte	.LFB10
 2428 0054 18000000 		.4byte	.LFE10
 2429 0058 00000000 		.4byte	.LFB11
 2430 005c 10000000 		.4byte	.LFE11
 2431 0060 00000000 		.4byte	.LFB12
 2432 0064 10000000 		.4byte	.LFE12
 2433 0068 00000000 		.4byte	.LFB13
 2434 006c 1C000000 		.4byte	.LFE13
 2435 0070 00000000 		.4byte	.LFB14
 2436 0074 1C000000 		.4byte	.LFE14
 2437 0078 00000000 		.4byte	.LFB15
 2438 007c 5C000000 		.4byte	.LFE15
 2439 0080 00000000 		.4byte	.LFB16
 2440 0084 40000000 		.4byte	.LFE16
 2441 0088 00000000 		.4byte	.LFB17
 2442 008c 48000000 		.4byte	.LFE17
 2443 0090 00000000 		.4byte	0
 2444 0094 00000000 		.4byte	0
 2445              		.section	.debug_line,"",%progbits
 2446              	.Ldebug_line0:
 2447 0000 7D020000 		.section	.debug_str,"MS",%progbits,1
 2447      02005500 
 2447      00000201 
 2447      FB0E0D00 
 2447      01010101 
 2448              	.LASF57:
 2449 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2449      5341525F 
 2449      5365715F 
 2449      315F6F66 
 2449      66736574 
 2450              	.LASF10:
 2451 0015 75696E74 		.ascii	"uint16\000"
 2451      313600
 2452              	.LASF25:
 2453 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2453      5341525F 
 2453      5365715F 
 2453      315F496E 
 2453      697400
 2454              	.LASF48:
 2455 002f 61646347 		.ascii	"adcGain\000"
 2455      61696E00 
 2456              	.LASF24:
 2457 0037 636F756E 		.ascii	"counts\000"
 2457      747300
 2458              	.LASF29:
 2459 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 60


 2459      5341525F 
 2459      5365715F 
 2459      315F5374 
 2459      61727443 
 2460              	.LASF44:
 2461 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2461      5341525F 
 2461      5365715F 
 2461      315F5365 
 2461      74536174 
 2462              	.LASF63:
 2463 0072 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2463      43313120 
 2463      352E342E 
 2463      31203230 
 2463      31363036 
 2464 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2464      20726576 
 2464      6973696F 
 2464      6E203233 
 2464      37373135 
 2465 00d8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2465      66756E63 
 2465      74696F6E 
 2465      2D736563 
 2465      74696F6E 
 2466              	.LASF27:
 2467 0100 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2467      5341525F 
 2467      5365715F 
 2467      315F5374 
 2467      61727400 
 2468              	.LASF7:
 2469 0114 6C6F6E67 		.ascii	"long long unsigned int\000"
 2469      206C6F6E 
 2469      6720756E 
 2469      7369676E 
 2469      65642069 
 2470              	.LASF26:
 2471 012b 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2471      5341525F 
 2471      5365715F 
 2471      315F456E 
 2471      61626C65 
 2472              	.LASF33:
 2473 0140 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2473      5341525F 
 2473      5365715F 
 2473      315F4765 
 2473      74526573 
 2474              	.LASF6:
 2475 015a 6C6F6E67 		.ascii	"long long int\000"
 2475      206C6F6E 
 2475      6720696E 
 2475      7400
 2476              	.LASF0:
 2477 0168 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 61


 2477      65642063 
 2477      68617200 
 2478              	.LASF41:
 2479 0174 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2479      5341525F 
 2479      5365715F 
 2479      315F5365 
 2479      74486967 
 2480              	.LASF13:
 2481 018f 696E7433 		.ascii	"int32\000"
 2481      3200
 2482              	.LASF52:
 2483 0195 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2483      5341525F 
 2483      5365715F 
 2483      315F436F 
 2483      756E7473 
 2484              	.LASF4:
 2485 01b3 6C6F6E67 		.ascii	"long int\000"
 2485      20696E74 
 2485      00
 2486              	.LASF9:
 2487 01bc 75696E74 		.ascii	"uint8\000"
 2487      3800
 2488              	.LASF61:
 2489 01c2 43794465 		.ascii	"CyDelayUs\000"
 2489      6C617955 
 2489      7300
 2490              	.LASF16:
 2491 01cc 646F7562 		.ascii	"double\000"
 2491      6C6500
 2492              	.LASF11:
 2493 01d3 75696E74 		.ascii	"uint32\000"
 2493      333200
 2494              	.LASF38:
 2495 01da 6D61736B 		.ascii	"mask\000"
 2495      00
 2496              	.LASF49:
 2497 01df 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2497      5341525F 
 2497      5365715F 
 2497      315F436F 
 2497      756E7473 
 2498              	.LASF34:
 2499 01fd 7265744D 		.ascii	"retMode\000"
 2499      6F646500 
 2500              	.LASF56:
 2501 0205 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2501      5341525F 
 2501      5365715F 
 2501      315F696E 
 2501      69745661 
 2502              	.LASF8:
 2503 021b 756E7369 		.ascii	"unsigned int\000"
 2503      676E6564 
 2503      20696E74 
 2503      00
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 62


 2504              	.LASF66:
 2505 0228 75566F6C 		.ascii	"uVolts\000"
 2505      747300
 2506              	.LASF5:
 2507 022f 6C6F6E67 		.ascii	"long unsigned int\000"
 2507      20756E73 
 2507      69676E65 
 2507      6420696E 
 2507      7400
 2508              	.LASF54:
 2509 0241 766F6C74 		.ascii	"volts\000"
 2509      7300
 2510              	.LASF23:
 2511 0247 746D7052 		.ascii	"tmpRegVal\000"
 2511      65675661 
 2511      6C00
 2512              	.LASF3:
 2513 0251 73686F72 		.ascii	"short unsigned int\000"
 2513      7420756E 
 2513      7369676E 
 2513      65642069 
 2513      6E7400
 2514              	.LASF60:
 2515 0264 4379496E 		.ascii	"CyIntSetVector\000"
 2515      74536574 
 2515      56656374 
 2515      6F7200
 2516              	.LASF55:
 2517 0273 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2517      5341525F 
 2517      5365715F 
 2517      315F6368 
 2517      616E6E65 
 2518              	.LASF51:
 2519 0290 6D566F6C 		.ascii	"mVolts\000"
 2519      747300
 2520              	.LASF19:
 2521 0297 72656733 		.ascii	"reg32\000"
 2521      3200
 2522              	.LASF43:
 2523 029d 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2523      5341525F 
 2523      5365715F 
 2523      315F5365 
 2523      744C696D 
 2524              	.LASF14:
 2525 02b8 666C6F61 		.ascii	"float32\000"
 2525      74333200 
 2526              	.LASF21:
 2527 02c0 73697A65 		.ascii	"sizetype\000"
 2527      74797065 
 2527      00
 2528              	.LASF40:
 2529 02c9 6C6F774C 		.ascii	"lowLimit\000"
 2529      696D6974 
 2529      00
 2530              	.LASF20:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 63


 2531 02d2 6C6F6E67 		.ascii	"long double\000"
 2531      20646F75 
 2531      626C6500 
 2532              	.LASF32:
 2533 02de 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2533      5341525F 
 2533      5365715F 
 2533      315F4973 
 2533      456E6443 
 2534              	.LASF30:
 2535 02fc 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2535      5341525F 
 2535      5365715F 
 2535      315F5374 
 2535      6F70436F 
 2536              	.LASF17:
 2537 0316 696E7436 		.ascii	"int64\000"
 2537      3400
 2538              	.LASF59:
 2539 031c 4379496E 		.ascii	"CyIntSetPriority\000"
 2539      74536574 
 2539      5072696F 
 2539      72697479 
 2539      00
 2540              	.LASF64:
 2541 032d 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2541      72617465 
 2541      645F536F 
 2541      75726365 
 2541      5C50536F 
 2542              	.LASF15:
 2543 0354 666C6F61 		.ascii	"float\000"
 2543      7400
 2544              	.LASF47:
 2545 035a 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2545      5341525F 
 2545      5365715F 
 2545      315F5365 
 2545      74476169 
 2546              	.LASF28:
 2547 0370 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2547      5341525F 
 2547      5365715F 
 2547      315F5374 
 2547      6F7000
 2548              	.LASF42:
 2549 0383 68696768 		.ascii	"highLimit\000"
 2549      4C696D69 
 2549      7400
 2550              	.LASF62:
 2551 038d 43794861 		.ascii	"CyHalt\000"
 2551      6C7400
 2552              	.LASF1:
 2553 0394 756E7369 		.ascii	"unsigned char\000"
 2553      676E6564 
 2553      20636861 
 2553      7200
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 64


 2554              	.LASF2:
 2555 03a2 73686F72 		.ascii	"short int\000"
 2555      7420696E 
 2555      7400
 2556              	.LASF53:
 2557 03ac 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2557      5341525F 
 2557      5365715F 
 2557      315F436F 
 2557      756E7473 
 2558              	.LASF37:
 2559 03c9 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2559      5341525F 
 2559      5365715F 
 2559      315F5365 
 2559      74436861 
 2560              	.LASF22:
 2561 03e3 63684E75 		.ascii	"chNum\000"
 2561      6D00
 2562              	.LASF35:
 2563 03e9 6368616E 		.ascii	"chan\000"
 2563      00
 2564              	.LASF18:
 2565 03ee 63686172 		.ascii	"char\000"
 2565      00
 2566              	.LASF39:
 2567 03f3 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2567      5341525F 
 2567      5365715F 
 2567      315F5365 
 2567      744C6F77 
 2568              	.LASF46:
 2569 040d 6F666673 		.ascii	"offset\000"
 2569      657400
 2570              	.LASF50:
 2571 0414 61646343 		.ascii	"adcCounts\000"
 2571      6F756E74 
 2571      7300
 2572              	.LASF58:
 2573 041e 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2573      5341525F 
 2573      5365715F 
 2573      315F636F 
 2573      756E7473 
 2574              	.LASF31:
 2575 043c 73746174 		.ascii	"status\000"
 2575      757300
 2576              	.LASF45:
 2577 0443 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2577      5341525F 
 2577      5365715F 
 2577      315F5365 
 2577      744F6666 
 2578              	.LASF12:
 2579 045b 696E7431 		.ascii	"int16\000"
 2579      3600
 2580              	.LASF65:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccigTi7J.s 			page 65


 2581 0461 433A5C55 		.ascii	"C:\\Users\\ADMIN\\Documents\\Sorting-project\\MandM"
 2581      73657273 
 2581      5C41444D 
 2581      494E5C44 
 2581      6F63756D 
 2582 048f 732D736F 		.ascii	"s-sorting.cydsn\000"
 2582      7274696E 
 2582      672E6379 
 2582      64736E00 
 2583              	.LASF36:
 2584 049f 72657375 		.ascii	"result\000"
 2584      6C7400
 2585              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
